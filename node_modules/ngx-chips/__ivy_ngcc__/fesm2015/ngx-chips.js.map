{"version":3,"file":"ngx-chips.js","sources":["ngx-chips/core/pipes/highlight.pipe.ts","ngx-chips/core/constants/index.ts","ngx-chips/core/providers/drag-provider.ts","ngx-chips/defaults.ts","ngx-chips/core/providers/options-provider.ts","ngx-chips/core/accessor.ts","ngx-chips/core/helpers/listen.ts","ngx-chips/components/tag-input-form/tag-input-form.component.ts","ngx-chips/components/tag/tag-ripple.component.ts","ngx-chips/components/tag/tag.component.ts","ngx-chips/components/tag-input/animations.ts","ngx-chips/components/dropdown/tag-input-dropdown.component.ts","ngx-chips/components/tag-input/tag-input.ts","ngx-chips/components/icon/icon.ts","ngx-chips/tag-input.module.ts","ngx-chips/ngx-chips.ts"],"names":["tslib_1.__decorate","constants.KEYDOWN","constants.KEYUP","constants.MAX_ITEMS_WARNING","constants.KEY_PRESS_ACTIONS","constants.ACTIONS_KEYS","constants.PREV","constants.NEXT"],"mappings":"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","sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\n\nconst escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n    /**\n     * @name transform\n     * @param value {string}\n     * @param arg {string}\n     */\n    public transform(value: string, arg: string): string {\n        if (!arg.trim()) {\n            return value;\n        }\n\n        try {\n            const regex = new RegExp(`(${escape(arg)})`, 'i');\n            return value.replace(regex, '<b>$1</b>');\n        } catch (e) {\n            return value;\n        }\n    }\n}\n","/*\n** constants and default values for <tag-input>\n */\n\nexport const PLACEHOLDER = '+ Tag';\nexport const SECONDARY_PLACEHOLDER = 'Enter a new tag';\nexport const KEYDOWN = 'keydown';\nexport const KEYUP = 'keyup';\nexport const FOCUS = 'focus';\nexport const MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';\n\nexport const ACTIONS_KEYS = {\n    DELETE: 'DELETE',\n    SWITCH_PREV: 'SWITCH_PREV',\n    SWITCH_NEXT: 'SWITCH_NEXT',\n    TAB: 'TAB'\n};\n\nexport const KEY_PRESS_ACTIONS = {\n    8: ACTIONS_KEYS.DELETE,\n    37: ACTIONS_KEYS.SWITCH_PREV,\n    39: ACTIONS_KEYS.SWITCH_NEXT,\n    9: ACTIONS_KEYS.TAB\n};\n\nexport const DRAG_AND_DROP_KEY = 'Text';\nexport const NEXT = 'NEXT';\nexport const PREV = 'PREV';\n","import { TagInputComponent } from '../../components/tag-input/tag-input';\nimport { TagModel } from '../accessor';\n\nimport { Injectable } from '@angular/core';\n\nexport declare interface DraggedTag {\n    index: number;\n    tag: TagModel;\n    zone: string;\n}\n\nimport { DRAG_AND_DROP_KEY } from '../../core/constants';\n\nexport declare interface State {\n    dragging: boolean;\n    dropping: boolean;\n    index: number | undefined;\n}\n\nexport declare type StateProperty = keyof State;\n\n@Injectable()\nexport class DragProvider {\n    public sender: TagInputComponent;\n    public receiver: TagInputComponent;\n\n    public state: State = {\n        dragging: false,\n        dropping: false,\n        index: undefined\n    };\n\n    /**\n     * @name setDraggedItem\n     * @param event\n     * @param tag\n     */\n    public setDraggedItem(event: DragEvent, tag: DraggedTag): void {\n        if (event && event.dataTransfer) {\n            event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));\n        }\n    }\n\n    /**\n     * @name getDraggedItem\n     * @param event\n     */\n    public getDraggedItem(event: DragEvent): DraggedTag | undefined {\n        if (event && event.dataTransfer) {\n            const data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);\n            try {\n                return JSON.parse(data) as DraggedTag;\n            } catch {\n                return;\n            }\n        }\n    }\n\n    /**\n     * @name setSender\n     * @param sender\n     */\n    public setSender(sender: TagInputComponent): void {\n        this.sender = sender;\n    }\n\n    /**\n     * @name setReceiver\n     * @param receiver\n     */\n    public setReceiver(receiver: TagInputComponent): void {\n        this.receiver = receiver;\n    }\n\n    /**\n     * @name onTagDropped\n     * @param tag\n     * @param indexDragged\n     * @param indexDropped\n     */\n    public onTagDropped(tag: TagModel, indexDragged: number, indexDropped?: number): void {\n        this.onDragEnd();\n\n        this.sender.onRemoveRequested(tag, indexDragged);\n        this.receiver.onAddingRequested(false, tag, indexDropped);\n    }\n\n    /**\n     * @name setState\n     * @param state\n     */\n    public setState(state: { [K in StateProperty]?: State[K] }): void {\n        this.state = { ...this.state, ...state };\n    }\n\n    /**\n     * @name getState\n     * @param key\n     */\n    public getState(key?: StateProperty): State | State[StateProperty] {\n        return key ? this.state[key] : this.state;\n    }\n\n    /**\n     * @name onDragEnd\n     */\n    public onDragEnd(): void {\n        this.setState({\n            dragging: false,\n            dropping: false,\n            index: undefined\n        });\n    }\n}\n","import { Observable } from 'rxjs';\nimport { ValidatorFn, AsyncValidatorFn } from '@angular/forms';\n\nimport { SECONDARY_PLACEHOLDER, PLACEHOLDER } from './core/constants/index';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagModel } from './core/accessor';\n\nexport interface TagInputOptions {\n    separatorKeys: string[];\n    separatorKeyCodes: number[];\n    maxItems: number;\n    placeholder: string;\n    secondaryPlaceholder: string;\n    validators: ValidatorFn[];\n    asyncValidators: AsyncValidatorFn[];\n    onlyFromAutocomplete: boolean;\n    errorMessages: { [key: string]: string; };\n    theme: '';\n    onTextChangeDebounce: number;\n    inputId: string | null;\n    inputClass: string;\n    clearOnBlur: boolean;\n    hideForm: boolean;\n    addOnBlur: boolean;\n    addOnPaste: boolean;\n    pasteSplitPattern: string | RegExp;\n    blinkIfDupe: boolean;\n    removable: boolean;\n    editable: boolean;\n    allowDupes: boolean;\n    modelAsStrings: boolean;\n    trimTags: boolean;\n    ripple: boolean;\n    tabIndex: string;\n    disable: boolean;\n    dragZone: string;\n    onRemoving?: (tag: TagModel) => Observable<TagModel>;\n    onAdding?: (tag: TagModel) => Observable<TagModel>;\n    displayBy: string;\n    identifyBy: string;\n    animationDuration: {\n        enter: string,\n        leave: string\n    };\n}\n\nexport interface TagInputDropdownOptions {\n    displayBy: string;\n    identifyBy: string;\n    appendToBody: boolean;\n    offset: string;\n    focusFirstElement: boolean;\n    showDropdownIfEmpty: boolean;\n    minimumTextLength: number;\n    limitItemsTo: number;\n    keepOpen: boolean;\n    zIndex: number;\n    dynamicUpdate: boolean;\n    matchingFn: (value: string, target: TagModel) => boolean;\n}\n\nexport const defaults = {\n    tagInput: <TagInputOptions>{\n        separatorKeys: [],\n        separatorKeyCodes: [],\n        maxItems: Infinity,\n        placeholder: PLACEHOLDER,\n        secondaryPlaceholder: SECONDARY_PLACEHOLDER,\n        validators: [],\n        asyncValidators: [],\n        onlyFromAutocomplete: false,\n        errorMessages: {},\n        theme: '',\n        onTextChangeDebounce: 250,\n        inputId: null,\n        inputClass: '',\n        clearOnBlur: false,\n        hideForm: false,\n        addOnBlur: false,\n        addOnPaste: false,\n        pasteSplitPattern: ',',\n        blinkIfDupe: true,\n        removable: true,\n        editable: false,\n        allowDupes: false,\n        modelAsStrings: false,\n        trimTags: true,\n        ripple: true,\n        tabIndex: '',\n        disable: false,\n        dragZone: '',\n        onRemoving: undefined,\n        onAdding: undefined,\n        displayBy: 'display',\n        identifyBy: 'value',\n        animationDuration: {\n            enter: '250ms',\n            leave: '150ms'\n        }\n    },\n    dropdown: <TagInputDropdownOptions>{\n        displayBy: 'display',\n        identifyBy: 'value',\n        appendToBody: true,\n        offset: '50 0',\n        focusFirstElement: false,\n        showDropdownIfEmpty: false,\n        minimumTextLength: 1,\n        limitItemsTo: Infinity,\n        keepOpen: true,\n        dynamicUpdate: true,\n        zIndex: 1000,\n        matchingFn\n    }\n};\n\n/**\n * @name matchingFn\n * @param this\n * @param value\n * @param target\n */\nfunction matchingFn(this: TagInputDropdown, value: string, target: TagModel): boolean {\n    const targetValue = target[this.displayBy].toString();\n\n    return targetValue && targetValue\n        .toLowerCase()\n        .indexOf(value.toLowerCase()) >= 0;\n}\n","import { defaults, TagInputOptions, TagInputDropdownOptions } from '../../defaults';\n\nexport type Options = {\n    tagInput?: {\n        [P in keyof TagInputOptions]?: TagInputOptions[P];\n    };\n    dropdown?: {\n        [P in keyof TagInputDropdownOptions]?: TagInputDropdownOptions[P];\n    }\n};\n\nexport class OptionsProvider {\n    public static defaults = defaults;\n\n    public setOptions(options: Options): void {\n        OptionsProvider.defaults.tagInput = {...defaults.tagInput, ...options.tagInput};\n        OptionsProvider.defaults.dropdown = {...defaults.dropdown, ...options.dropdown};\n    }\n}\n\nexport { TagInputDropdownOptions, TagInputOptions };\n","import { ControlValueAccessor } from '@angular/forms';\nimport { Input } from '@angular/core';\nimport { OptionsProvider } from './providers/options-provider';\nimport { TagInputDropdown } from '../components/dropdown/tag-input-dropdown.component';\n\nexport class TagModelClass {\n    [key: string]: any;\n}\n\nexport type TagModel = string | TagModelClass;\n\nexport function isObject(obj: any): boolean {\n    return obj === Object(obj);\n}\n\nexport class TagInputAccessor implements ControlValueAccessor {\n    private _items: TagModel[] = [];\n    private _onTouchedCallback: () => void;\n    private _onChangeCallback: (items: TagModel[]) => void;\n\n    public dropdown: TagInputDropdown;\n\n    /**\n     * @name displayBy\n     */\n    @Input() public displayBy: string = OptionsProvider.defaults.tagInput.displayBy;\n\n    /**\n     * @name identifyBy\n     */\n    @Input() public identifyBy: string = OptionsProvider.defaults.tagInput.identifyBy;\n\n    public get items(): TagModel[] {\n        return this._items;\n    }\n\n    public set items(items: TagModel[]) {\n        this._items = items;\n        this._onChangeCallback(this._items);\n    }\n\n    public onTouched() {\n        this._onTouchedCallback();\n    }\n\n    public writeValue(items: any[]) {\n        this._items = items || [];\n    }\n\n    public registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    /**\n     * @name getItemValue\n     * @param item\n     * @param fromDropdown\n     */\n    public getItemValue(item: TagModel, fromDropdown = false): string {\n        const property = fromDropdown && this.dropdown ? this.dropdown.identifyBy : this.identifyBy;\n        return isObject(item) ? item[property] : item;\n    }\n\n    /**\n     * @name getItemDisplay\n     * @param item\n     * @param fromDropdown\n     */\n    public getItemDisplay(item: TagModel, fromDropdown = false): string {\n        const property = fromDropdown && this.dropdown ? this.dropdown.displayBy : this.displayBy;\n        return isObject(item) ? item[property] : item;\n    }\n\n    /**\n     * @name getItemsWithout\n     * @param index\n     */\n    protected getItemsWithout(index: number): TagModel[] {\n        return this.items.filter((item, position) => position !== index);\n    }\n}\n","\n/**\n * @name listen\n * @param listenerType\n * @param action\n * @param condition\n */\nexport function listen(listenerType: string, action: () => any, condition = true): void {\n    // if the event provided does not exist, throw an error\n    if (!this.listeners.hasOwnProperty(listenerType)) {\n        throw new Error('The event entered may be wrong');\n    }\n\n    // if a condition is present and is false, exit early\n    if (!condition) {\n        return;\n    }\n\n    // fire listener\n    this.listeners[listenerType].push(action);\n}\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { AsyncValidatorFn, FormControl, FormGroup, ValidatorFn } from '@angular/forms';\n\n@Component({\n    selector: 'tag-input-form',\n    styleUrls: ['./tag-input-form.style.scss'],\n    templateUrl: './tag-input-form.template.html'\n})\nexport class TagInputForm implements OnInit, OnChanges {\n    /**\n     * @name onSubmit\n     */\n    @Output() public onSubmit: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onBlur\n     */\n    @Output() public onBlur: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onFocus\n     */\n    @Output() public onFocus: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeyup\n     */\n    @Output() public onKeyup: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeydown\n     */\n    @Output() public onKeydown: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name inputTextChange\n     */\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    // inputs\n\n    /**\n     * @name placeholder\n     */\n    @Input() public placeholder: string;\n\n    /**\n     * @name validators\n     */\n    @Input() public validators: ValidatorFn[] = [];\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public asyncValidators: AsyncValidatorFn[] = [];\n\n    /**\n     * @name inputId\n     */\n    @Input() public inputId: string;\n\n    /**\n     * @name inputClass\n     */\n    @Input() public inputClass: string;\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    @Input() public tabindex = '';\n\n    /**\n     * @name disabled\n     */\n    @Input() public disabled = false;\n\n    /**\n     * @name input\n     */\n    @ViewChild('input', { static: false }) public input;\n\n    /**\n     * @name form\n     */\n    public form: FormGroup;\n\n    /**\n     * @name inputText\n     */\n    @Input()\n    public get inputText(): string {\n        return this.item.value;\n    }\n\n    /**\n     * @name inputText\n     * @param text {string}\n     */\n    public set inputText(text: string) {\n        this.item.setValue(text);\n\n        this.inputTextChange.emit(text);\n    }\n\n    private readonly item: FormControl = new FormControl({ value: '', disabled: this.disabled });\n\n    ngOnInit() {\n        this.item.setValidators(this.validators);\n        this.item.setAsyncValidators(this.asyncValidators);\n\n        // creating form\n        this.form = new FormGroup({\n            item: this.item\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.disabled && !changes.disabled.firstChange) {\n            if (changes.disabled.currentValue) {\n                this.form.controls['item'].disable();\n            } else {\n                this.form.controls['item'].enable();\n            }\n        }\n    }\n\n    /**\n     * @name value\n     */\n    public get value(): FormControl {\n        return this.form.get('item') as FormControl;\n    }\n\n    /**\n     * @name isInputFocused\n     */\n    public isInputFocused(): boolean {\n        const doc = typeof document !== 'undefined' ? document : undefined;\n        return doc ? doc.activeElement === this.input.nativeElement : false;\n    }\n\n    /**\n     * @name getErrorMessages\n     * @param messages\n     */\n    public getErrorMessages(messages: { [key: string]: string }): string[] {\n        return Object.keys(messages)\n            .filter(err => this.value.hasError(err))\n            .map(err => messages[err]);\n    }\n\n    /**\n     * @name hasErrors\n     */\n    public hasErrors(): boolean {\n        const { dirty, value, valid } = this.form;\n        return dirty && value.item && !valid;\n    }\n\n    /**\n     * @name focus\n     */\n    public focus(): void {\n        this.input.nativeElement.focus();\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.input.nativeElement.blur();\n    }\n\n    /**\n     * @name getElementPosition\n     */\n    public getElementPosition(): ClientRect {\n        return this.input.nativeElement.getBoundingClientRect();\n    }\n\n    /**\n     * - removes input from the component\n     * @name destroy\n     */\n    public destroy(): void {\n        const input = this.input.nativeElement;\n        input.parentElement.removeChild(input);\n    }\n\n    /**\n     * @name onKeyDown\n     * @param $event\n     */\n    public onKeyDown($event) {\n        this.inputText = this.value.value;\n        if ($event.key === 'Enter') {\n            this.submit($event);\n        } else {\n          return this.onKeydown.emit($event);\n        }\n    }\n\n    /**\n     * @name onKeyUp\n     * @param $event\n     */\n    public onKeyUp($event) {\n        this.inputText = this.value.value;\n        return this.onKeyup.emit($event);\n    }\n\n    /**\n     * @name submit\n     */\n    public submit($event: any): void {\n        $event.preventDefault();\n        this.onSubmit.emit($event);\n    }\n}\n","import {\n    Component,\n    Input\n} from '@angular/core';\n\n\nimport {\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state\n} from '@angular/animations';\n\n@Component({\n    selector: 'tag-ripple',\n    styles: [`\n        :host {\n            width: 100%;\n            height: 100%;\n            left: 0;\n            overflow: hidden;\n            position: absolute;\n        }\n\n        .tag-ripple {\n            background: rgba(0, 0, 0, 0.1);\n            top: 50%;\n            left: 50%;\n            height: 100%;\n            transform: translate(-50%, -50%);\n            position: absolute;\n        }\n    `],\n    template: `\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\n    `,\n    animations: [\n        trigger('ink', [\n            state('none', style({width: 0, opacity: 0})),\n            transition('none => clicked', [\n                animate(300, keyframes([\n                    style({opacity: 1, offset: 0, width: '30%', borderRadius: '100%'}),\n                    style({opacity: 1, offset: 0.5, width: '50%'}),\n                    style({opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px'})\n                ]))\n            ])\n        ])\n    ]\n})\nexport class TagRipple {\n    @Input() public state = 'none';\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    TemplateRef,\n    ElementRef,\n    HostListener,\n    HostBinding,\n    ViewChild,\n    ChangeDetectorRef,\n    Renderer2\n} from '@angular/core';\n\nimport { TagModel } from '../../core/accessor';\nimport { TagRipple } from '../tag/tag-ripple.component';\nimport { EventLike } from '../../core/helpers/event-like';\n\n// mocking navigator\nconst navigator = typeof window !== 'undefined' ? window.navigator : {\n    userAgent: 'Chrome',\n    vendor: 'Google Inc'\n};\n\nconst isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n\n@Component({\n    selector: 'tag',\n    templateUrl: './tag.template.html',\n    styleUrls: ['./tag-component.style.scss']\n})\nexport class TagComponent {\n    /**\n     * @name model {TagModel}\n     */\n    @Input()\n    public model: TagModel;\n\n    /**\n     * @name removable {boolean}\n     */\n    @Input()\n    public removable: boolean;\n\n    /**\n     * @name editable {boolean}\n     */\n    @Input()\n    public editable: boolean;\n\n    /**\n     * @name template {TemplateRef<any>}\n     */\n    @Input()\n    public template: TemplateRef<any>;\n\n    /**\n     * @name displayBy {string}\n     */\n    @Input()\n    public displayBy: string;\n\n    /**\n     * @name identifyBy {string}\n     */\n    @Input()\n    public identifyBy: string;\n\n    /**\n     * @name index {number}\n     */\n    @Input()\n    public index: number;\n\n    /**\n     * @name hasRipple\n     */\n    @Input()\n    public hasRipple: boolean;\n\n    /**\n     * @name disabled\n     */\n    @Input()\n    public disabled = false;\n\n    /**\n     * @name canAddTag\n     */\n    @Input()\n    public canAddTag: (tag: TagModel) => boolean;\n\n    /**\n     * @name onSelect\n     */\n    @Output()\n    public onSelect: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     */\n    @Output()\n    public onRemove: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onBlur\n     */\n    @Output()\n    public onBlur: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onKeyDown\n     */\n    @Output()\n    public onKeyDown: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * @name onTagEdited\n     */\n    @Output()\n    public onTagEdited: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name readonly {boolean}\n     */\n    public get readonly(): boolean {\n        return typeof this.model !== 'string' && this.model.readonly === true;\n    }\n\n    /**\n     * @name editing\n     */\n    public editing = false;\n\n    /**\n     * @name moving\n     */\n    @HostBinding('class.moving')\n    public moving: boolean;\n\n    /**\n     * @name rippleState\n     */\n    public rippleState = 'none';\n\n    /**\n     * @name ripple {TagRipple}\n     */\n    @ViewChild(TagRipple, { static: false })\n    public ripple: TagRipple;\n\n    constructor(\n        public element: ElementRef,\n        public renderer: Renderer2,\n        private cdRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * @name select\n     */\n    public select($event?: MouseEvent): void {\n        if (this.readonly || this.disabled) {\n            return;\n        }\n\n        if ($event) {\n            $event.stopPropagation();\n        }\n\n        this.focus();\n\n        this.onSelect.emit(this.model);\n    }\n\n    /**\n     * @name remove\n     */\n    public remove($event: MouseEvent): void {\n        $event.stopPropagation();\n        this.onRemove.emit(this);\n    }\n\n    /**\n     * @name focus\n     */\n    public focus(): void {\n        this.element.nativeElement.focus();\n    }\n\n    public move(): void {\n        this.moving = true;\n    }\n\n    /**\n     * @name keydown\n     * @param event\n     */\n    @HostListener('keydown', ['$event'])\n    public keydown(event: EventLike): void {\n        if (this.editing) {\n            if (event.keyCode === 13) {\n                return this.disableEditMode(event);\n            }\n        } else {\n            this.onKeyDown.emit({ event, model: this.model });\n        }\n    }\n\n    /**\n     * @name blink\n     */\n    public blink(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add('blink');\n\n        setTimeout(() => classList.remove('blink'), 50);\n    }\n\n    /**\n     * @name toggleEditMode\n     */\n    public toggleEditMode(): void {\n        if (this.editable) {\n            return this.editing ? undefined : this.activateEditMode();\n        }\n    }\n\n    /**\n     * @name onBlurred\n     * @param event\n     */\n    public onBlurred(event: any): void {\n        // Checks if it is editable first before handeling the onBlurred event in order to prevent\n        // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\n        if (!this.editable) {\n            return;\n        }\n\n        this.disableEditMode();\n\n        const value: string = event.target.innerText;\n        const result =\n            typeof this.model === 'string'\n                ? value\n                : { ...this.model, [this.displayBy]: value };\n\n        this.onBlur.emit(result);\n    }\n\n    /**\n     * @name getDisplayValue\n     * @param item\n     */\n    public getDisplayValue(item: TagModel): string {\n        return typeof item === 'string' ? item : item[this.displayBy];\n    }\n\n    /**\n     * @desc returns whether the ripple is visible or not\n     * only works in Chrome\n     * @name isRippleVisible\n     */\n    public get isRippleVisible(): boolean {\n        return !this.readonly && !this.editing && isChrome && this.hasRipple;\n    }\n\n    /**\n     * @name disableEditMode\n     * @param $event\n     */\n    public disableEditMode($event?: EventLike): void {\n        const classList = this.element.nativeElement.classList;\n        const input = this.getContentEditableText();\n\n        this.editing = false;\n        classList.remove('tag--editing');\n\n        if (!input) {\n            this.setContentEditableText(this.model);\n            return;\n        }\n\n        this.storeNewValue(input);\n        this.cdRef.detectChanges();\n\n        if ($event) {\n            $event.preventDefault();\n        }\n    }\n\n    /**\n     * @name isDeleteIconVisible\n     */\n    public isDeleteIconVisible(): boolean {\n        return (\n            !this.readonly && !this.disabled && this.removable && !this.editing\n        );\n    }\n\n    /**\n     * @name getContentEditableText\n     */\n    private getContentEditableText(): string {\n        const input = this.getContentEditable();\n\n        return input ? input.innerText.trim() : '';\n    }\n\n    /**\n     * @name setContentEditableText\n     * @param model\n     */\n    private setContentEditableText(model: TagModel) {\n        const input = this.getContentEditable();\n        const value = this.getDisplayValue(model);\n\n        input.innerText = value;\n    }\n\n    /**\n     * @name\n     */\n    private activateEditMode(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add('tag--editing');\n\n        this.editing = true;\n    }\n\n    /**\n     * @name storeNewValue\n     * @param input\n     */\n    private storeNewValue(input: string): void {\n        const exists = (tag: TagModel) => {\n            return typeof tag === 'string'\n                ? tag === input\n                : tag[this.displayBy] === input;\n        };\n\n        const hasId = () => {\n            return this.model[this.identifyBy] !== this.model[this.displayBy];\n        };\n\n        // if the value changed, replace the value in the model\n        if (exists(this.model)) {\n            return;\n        }\n\n        const model =\n            typeof this.model === 'string'\n                ? input\n                : {\n                      index: this.index,\n                      [this.identifyBy]: hasId()\n                          ? this.model[this.identifyBy]\n                          : input,\n                      [this.displayBy]: input\n                  };\n\n        if (this.canAddTag(model)) {\n            this.onTagEdited.emit({ tag: model, index: this.index });\n        } else {\n            this.setContentEditableText(this.model);\n        }\n    }\n\n    /**\n     * @name getContentEditable\n     */\n    private getContentEditable(): HTMLInputElement {\n        return this.element.nativeElement.querySelector('[contenteditable]');\n    }\n}\n","import {\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n/**\n * @name animations\n */\nexport const animations = [\n    trigger('animation', [\n        state('in', style({\n            opacity: 1\n        })),\n        state('out', style({\n            opacity: 0\n        })),\n        transition(':enter', [\n            animate('{{ enter }}', keyframes([\n                style({opacity: 0, offset: 0, transform: 'translate(0px, 20px)'}),\n                style({opacity: 0.3, offset: 0.3, transform: 'translate(0px, -10px)'}),\n                style({opacity: 0.5, offset: 0.5, transform: 'translate(0px, 0px)'}),\n                style({opacity: 0.75, offset: 0.75, transform: 'translate(0px, 5px)'}),\n                style({opacity: 1, offset: 1, transform: 'translate(0px, 0px)'})\n            ]))\n        ]),\n        transition(':leave', [\n            animate('{{ leave }}', keyframes([\n                style({opacity: 1, transform: 'translateX(0)', offset: 0}),\n                style({opacity: 1, transform: 'translateX(-15px)', offset: 0.7}),\n                style({opacity: 0, transform: 'translateX(100%)', offset: 1.0})\n            ]))\n        ])\n    ])\n];\n","import {\n  Component,\n  ContentChildren,\n  EventEmitter,\n  HostListener,\n  Injector,\n  Input,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  AfterViewInit\n} from '@angular/core';\n\n// rx\nimport { Observable } from 'rxjs';\nimport { filter, first, debounceTime } from 'rxjs/operators';\n\nimport { Ng2Dropdown, Ng2MenuItem } from 'ng2-material-dropdown';\nimport { defaults } from '../../defaults';\nimport { TagModel } from '../../core/accessor';\nimport { TagInputComponent } from '../tag-input/tag-input';\n\n@Component({\n  selector: 'tag-input-dropdown',\n  templateUrl: './tag-input-dropdown.template.html'\n})\nexport class TagInputDropdown implements AfterViewInit {\n  /**\n   * @name dropdown\n   */\n  @ViewChild(Ng2Dropdown, { static: false }) public dropdown: Ng2Dropdown;\n\n  /**\n   * @name menuTemplate\n   * @desc reference to the template if provided by the user\n   */\n  @ContentChildren(TemplateRef) public templates: QueryList<TemplateRef<any>>;\n\n  /**\n   * @name offset\n   */\n  @Input() public offset: string = defaults.dropdown.offset;\n\n  /**\n   * @name focusFirstElement\n   */\n  @Input() public focusFirstElement = defaults.dropdown.focusFirstElement;\n\n  /**\n   * - show autocomplete dropdown if the value of input is empty\n   * @name showDropdownIfEmpty\n   */\n  @Input() public showDropdownIfEmpty = defaults.dropdown.showDropdownIfEmpty;\n\n  /**\n   * @description observable passed as input which populates the autocomplete items\n   * @name autocompleteObservable\n   */\n  @Input() public autocompleteObservable: (text: string) => Observable<any>;\n\n  /**\n   * - desc minimum text length in order to display the autocomplete dropdown\n   * @name minimumTextLength\n   */\n  @Input() public minimumTextLength = defaults.dropdown.minimumTextLength;\n\n  /**\n   * - number of items to display in the autocomplete dropdown\n   * @name limitItemsTo\n   */\n  @Input() public limitItemsTo: number = defaults.dropdown.limitItemsTo;\n\n  /**\n   * @name displayBy\n   */\n  @Input() public displayBy = defaults.dropdown.displayBy;\n\n  /**\n   * @name identifyBy\n   */\n  @Input() public identifyBy = defaults.dropdown.identifyBy;\n\n  /**\n   * @description a function a developer can use to implement custom matching for the autocomplete\n   * @name matchingFn\n   */\n  @Input() public matchingFn: (value: string, target: TagModel) => boolean =\n    defaults.dropdown.matchingFn;\n\n  /**\n   * @name appendToBody\n   */\n  @Input() public appendToBody = defaults.dropdown.appendToBody;\n\n  /**\n   * @name keepOpen\n   * @description option to leave dropdown open when adding a new item\n   */\n  @Input() public keepOpen = defaults.dropdown.keepOpen;\n\n  /**\n   * @name dynamicUpdate\n   */\n  @Input() public dynamicUpdate = defaults.dropdown.dynamicUpdate;\n\n  /**\n   * @name zIndex\n   */\n  @Input() public zIndex = defaults.dropdown.zIndex;\n\n  /**\n   * list of items that match the current value of the input (for autocomplete)\n   * @name items\n   */\n  public items: TagModel[] = [];\n\n  /**\n   * @name tagInput\n   */\n  public tagInput: TagInputComponent = this.injector.get(TagInputComponent);\n\n  /**\n   * @name _autocompleteItems\n   */\n  private _autocompleteItems: TagModel[] = [];\n\n  /**\n   * @name autocompleteItems\n   * @param items\n   */\n  public set autocompleteItems(items: TagModel[]) {\n    this._autocompleteItems = items;\n  }\n\n  /**\n   * @name autocompleteItems\n   * @desc array of items that will populate the autocomplete\n   */\n  @Input() public get autocompleteItems(): TagModel[] {\n    const items = this._autocompleteItems;\n\n    if (!items) {\n      return [];\n    }\n\n    return items.map((item: TagModel) => {\n      return typeof item === 'string'\n        ? {\n            [this.displayBy]: item,\n            [this.identifyBy]: item\n          }\n        : item;\n    });\n  }\n\n  constructor(private readonly injector: Injector) {}\n\n  /**\n   * @name ngAfterviewInit\n   */\n  ngAfterViewInit(): void {\n    this.onItemClicked().subscribe((item: Ng2MenuItem) => {\n      this.requestAdding(item);\n    });\n\n    // reset itemsMatching array when the dropdown is hidden\n    this.onHide().subscribe(this.resetItems);\n\n    const DEBOUNCE_TIME = 200;\n    const KEEP_OPEN = this.keepOpen;\n\n    this.tagInput.onTextChange\n      .asObservable()\n      .pipe(\n        debounceTime(DEBOUNCE_TIME),\n        filter((value: string) => {\n          if (KEEP_OPEN === false) {\n            return value.length > 0;\n          }\n\n          return true;\n        })\n      )\n      .subscribe(this.show);\n  }\n\n  /**\n   * @name updatePosition\n   */\n  public updatePosition(): void {\n    const position = this.tagInput.inputForm.getElementPosition();\n\n    this.dropdown.menu.updatePosition(position, this.dynamicUpdate);\n  }\n\n  /**\n   * @name isVisible\n   */\n  public get isVisible(): boolean {\n    return this.dropdown.menu.dropdownState.menuState.isVisible;\n  }\n\n  /**\n   * @name onHide\n   */\n  public onHide(): EventEmitter<Ng2Dropdown> {\n    return this.dropdown.onHide;\n  }\n\n  /**\n   * @name onItemClicked\n   */\n  public onItemClicked(): EventEmitter<string> {\n    return this.dropdown.onItemClicked;\n  }\n\n  /**\n   * @name selectedItem\n   */\n  public get selectedItem(): Ng2MenuItem {\n    return this.dropdown.menu.dropdownState.dropdownState.selectedItem;\n  }\n\n  /**\n   * @name state\n   */\n  public get state(): any {\n    return this.dropdown.menu.dropdownState;\n  }\n\n  /**\n   *\n   * @name show\n   */\n  public show = (): void => {\n    const maxItemsReached =\n      this.tagInput.items.length === this.tagInput.maxItems;\n    const value = this.getFormValue();\n    const hasMinimumText = value.trim().length >= this.minimumTextLength;\n    const position = this.calculatePosition();\n    const items = this.getMatchingItems(value);\n    const hasItems = items.length > 0;\n    const isHidden = this.isVisible === false;\n    const showDropdownIfEmpty = this.showDropdownIfEmpty && hasItems && !value;\n    const isDisabled = this.tagInput.disable;\n\n    const shouldShow =\n      isHidden && ((hasItems && hasMinimumText) || showDropdownIfEmpty);\n    const shouldHide = this.isVisible && !hasItems;\n\n    if (this.autocompleteObservable && hasMinimumText) {\n      return this.getItemsFromObservable(value);\n    }\n\n    if (\n      (!this.showDropdownIfEmpty && !value) ||\n      maxItemsReached ||\n      isDisabled\n    ) {\n      return this.dropdown.hide();\n    }\n\n    this.setItems(items);\n\n    if (shouldShow) {\n      this.dropdown.show(position);\n    } else if (shouldHide) {\n      this.hide();\n    }\n  };\n\n  /**\n   * @name hide\n   */\n  public hide(): void {\n    this.resetItems();\n    this.dropdown.hide();\n  }\n\n  /**\n   * @name scrollListener\n   */\n  @HostListener('window:scroll')\n  public scrollListener(): void {\n    if (!this.isVisible || !this.dynamicUpdate) {\n      return;\n    }\n\n    this.updatePosition();\n  }\n\n  /**\n   * @name onWindowBlur\n   */\n  @HostListener('window:blur')\n  public onWindowBlur(): void {\n    this.dropdown.hide();\n  }\n\n  /**\n   * @name getFormValue\n   */\n  private getFormValue(): string {\n    const formValue = this.tagInput.formValue;\n    return formValue ? formValue.toString().trim() : '';\n  }\n\n  /**\n   * @name calculatePosition\n   */\n  private calculatePosition(): ClientRect {\n    return this.tagInput.inputForm.getElementPosition();\n  }\n\n  /**\n   * @name requestAdding\n   * @param item {Ng2MenuItem}\n   */\n  private requestAdding = async (item: Ng2MenuItem) => {\n    const tag = this.createTagModel(item);\n    await this.tagInput.onAddingRequested(true, tag).catch(() => {});\n  };\n\n  /**\n   * @name createTagModel\n   * @param item\n   */\n  private createTagModel(item: Ng2MenuItem): TagModel {\n    const display =\n      typeof item.value === 'string' ? item.value : item.value[this.displayBy];\n    const value =\n      typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\n\n    return {\n      ...item.value,\n      [this.tagInput.displayBy]: display,\n      [this.tagInput.identifyBy]: value\n    };\n  }\n\n  /**\n   *\n   * @param value {string}\n   */\n  private getMatchingItems(value: string): TagModel[] {\n    if (!value && !this.showDropdownIfEmpty) {\n      return [];\n    }\n\n    const dupesAllowed = this.tagInput.allowDupes;\n\n    return this.autocompleteItems.filter((item: TagModel) => {\n      const hasValue = dupesAllowed\n        ? false\n        : this.tagInput.tags.some(tag => {\n            const identifyBy = this.tagInput.identifyBy;\n            const model =\n              typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\n\n            return model === item[this.identifyBy];\n          });\n\n      return this.matchingFn(value, item) && hasValue === false;\n    });\n  }\n\n  /**\n   * @name setItems\n   */\n  private setItems(items: TagModel[]): void {\n    this.items = items.slice(0, this.limitItemsTo || items.length);\n  }\n\n  /**\n   * @name resetItems\n   */\n  private resetItems = (): void => {\n    this.items = [];\n  };\n\n  /**\n   * @name populateItems\n   * @param data\n   */\n  private populateItems(data: any): TagInputDropdown {\n    this.autocompleteItems = data.map(item => {\n      return typeof item === 'string'\n        ? {\n            [this.displayBy]: item,\n            [this.identifyBy]: item\n          }\n        : item;\n    });\n\n    return this;\n  }\n\n  /**\n   * @name getItemsFromObservable\n   * @param text\n   */\n  private getItemsFromObservable = (text: string): void => {\n    this.setLoadingState(true);\n\n    const subscribeFn = (data: any[]) => {\n      // hide loading animation\n      this.setLoadingState(false)\n        // add items\n        .populateItems(data);\n\n      this.setItems(this.getMatchingItems(text));\n\n      if (this.items.length) {\n        this.dropdown.show(this.calculatePosition());\n      } else {\n        this.dropdown.hide();\n      }\n    };\n\n    this.autocompleteObservable(text)\n      .pipe(first())\n      .subscribe(subscribeFn, () => this.setLoadingState(false));\n  };\n\n  /**\n   * @name setLoadingState\n   * @param state\n   */\n  private setLoadingState(state: boolean): TagInputDropdown {\n    this.tagInput.isLoading = state;\n\n    return this;\n  }\n}\n","// angular\nimport {\n    Component,\n    forwardRef,\n    HostBinding,\n    Input,\n    Output,\n    EventEmitter,\n    Renderer2,\n    ViewChild,\n    ViewChildren,\n    ContentChildren,\n    ContentChild,\n    OnInit,\n    TemplateRef,\n    QueryList,\n    AfterViewInit\n} from '@angular/core';\n\nimport {\n    AsyncValidatorFn,\n    FormControl,\n    NG_VALUE_ACCESSOR,\n    ValidatorFn\n} from '@angular/forms';\n\n// rx\nimport { Observable } from 'rxjs';\nimport { debounceTime, filter, map, first } from 'rxjs/operators';\n\n// ng2-tag-input\nimport { TagInputAccessor, TagModel } from '../../core/accessor';\nimport { listen } from '../../core/helpers/listen';\nimport * as constants from '../../core/constants';\n\nimport { DragProvider, DraggedTag } from '../../core/providers/drag-provider';\n\nimport { TagInputForm } from '../tag-input-form/tag-input-form.component';\nimport { TagComponent } from '../tag/tag.component';\n\nimport { animations } from './animations';\nimport { defaults } from '../../defaults';\nimport { TagInputDropdown } from '../dropdown/tag-input-dropdown.component';\n\n// angular universal hacks\n/* tslint:disable-next-line */\nconst DragEvent = (window as any).DragEvent;\n\nconst CUSTOM_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\n@Component({\n    selector: 'tag-input',\n    providers: [CUSTOM_ACCESSOR],\n    styleUrls: ['./tag-input.style.scss'],\n    templateUrl: './tag-input.template.html',\n    animations\n})\nexport class TagInputComponent extends TagInputAccessor implements OnInit, AfterViewInit {\n    /**\n     * @name separatorKeys\n     * @desc keyboard keys with which a user can separate items\n     */\n    @Input() public separatorKeys: string[] = defaults.tagInput.separatorKeys;\n\n    /**\n     * @name separatorKeyCodes\n     * @desc keyboard key codes with which a user can separate items\n     */\n    @Input() public separatorKeyCodes: number[] = defaults.tagInput.separatorKeyCodes;\n\n    /**\n     * @name placeholder\n     * @desc the placeholder of the input text\n     */\n    @Input() public placeholder: string = defaults.tagInput.placeholder;\n\n    /**\n     * @name secondaryPlaceholder\n     * @desc placeholder to appear when the input is empty\n     */\n    @Input() public secondaryPlaceholder: string = defaults.tagInput.secondaryPlaceholder;\n\n    /**\n     * @name maxItems\n     * @desc maximum number of items that can be added\n     */\n    @Input() public maxItems: number = defaults.tagInput.maxItems;\n\n    /**\n     * @name validators\n     * @desc array of Validators that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public validators: ValidatorFn[] = defaults.tagInput.validators;\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public asyncValidators: AsyncValidatorFn[] = defaults.tagInput.asyncValidators;\n\n    /**\n    * - if set to true, it will only possible to add items from the autocomplete\n    * @name onlyFromAutocomplete\n    */\n    @Input() public onlyFromAutocomplete = defaults.tagInput.onlyFromAutocomplete;\n\n    /**\n     * @name errorMessages\n     */\n    @Input() public errorMessages: { [key: string]: string } = defaults.tagInput.errorMessages;\n\n    /**\n     * @name theme\n     */\n    @Input() public theme: string = defaults.tagInput.theme;\n\n    /**\n     * @name onTextChangeDebounce\n     */\n    @Input() public onTextChangeDebounce = defaults.tagInput.onTextChangeDebounce;\n\n    /**\n     * - custom id assigned to the input\n     * @name id\n     */\n    @Input() public inputId = defaults.tagInput.inputId;\n\n    /**\n     * - custom class assigned to the input\n     */\n    @Input() public inputClass: string = defaults.tagInput.inputClass;\n\n    /**\n     * - option to clear text input when the form is blurred\n     * @name clearOnBlur\n     */\n    @Input() public clearOnBlur: boolean = defaults.tagInput.clearOnBlur;\n\n    /**\n     * - hideForm\n     * @name clearOnBlur\n     */\n    @Input() public hideForm: boolean = defaults.tagInput.hideForm;\n\n    /**\n     * @name addOnBlur\n     */\n    @Input() public addOnBlur: boolean = defaults.tagInput.addOnBlur;\n\n    /**\n     * @name addOnPaste\n     */\n    @Input() public addOnPaste: boolean = defaults.tagInput.addOnPaste;\n\n    /**\n     * - pattern used with the native method split() to separate patterns in the string pasted\n     * @name pasteSplitPattern\n     */\n    @Input() public pasteSplitPattern = defaults.tagInput.pasteSplitPattern;\n\n    /**\n     * @name blinkIfDupe\n     */\n    @Input() public blinkIfDupe = defaults.tagInput.blinkIfDupe;\n\n    /**\n     * @name removable\n     */\n    @Input() public removable = defaults.tagInput.removable;\n\n    /**\n     * @name editable\n     */\n    @Input() public editable: boolean = defaults.tagInput.editable;\n\n    /**\n     * @name allowDupes\n     */\n    @Input() public allowDupes = defaults.tagInput.allowDupes;\n\n    /**\n     * @description if set to true, the newly added tags will be added as strings, and not objects\n     * @name modelAsStrings\n     */\n    @Input() public modelAsStrings = defaults.tagInput.modelAsStrings;\n\n    /**\n     * @name trimTags\n     */\n    @Input() public trimTags = defaults.tagInput.trimTags;\n\n    /**\n     * @name inputText\n     */\n    @Input() public get inputText(): string {\n        return this.inputTextValue;\n    }\n\n    /**\n     * @name ripple\n     */\n    @Input() public ripple: boolean = defaults.tagInput.ripple;\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    @Input() public tabindex: string = defaults.tagInput.tabIndex;\n\n    /**\n     * @name disable\n     */\n    @Input() public disable: boolean = defaults.tagInput.disable;\n\n    /**\n     * @name dragZone\n     */\n    @Input() public dragZone: string = defaults.tagInput.dragZone;\n\n    /**\n     * @name onRemoving\n     */\n    @Input() public onRemoving = defaults.tagInput.onRemoving;\n\n    /**\n     * @name onAdding\n     */\n    @Input() public onAdding = defaults.tagInput.onAdding;\n\n    /**\n     * @name animationDuration\n     */\n    @Input() public animationDuration = defaults.tagInput.animationDuration;\n\n    /**\n     * @name onAdd\n     * @desc event emitted when adding a new item\n     */\n    @Output() public onAdd = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     * @desc event emitted when removing an existing item\n     */\n    @Output() public onRemove = new EventEmitter<TagModel>();\n\n    /**\n     * @name onSelect\n     * @desc event emitted when selecting an item\n     */\n    @Output() public onSelect = new EventEmitter<TagModel>();\n\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is focused\n     */\n    @Output() public onFocus = new EventEmitter<string>();\n\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is blurred\n     */\n    @Output() public onBlur = new EventEmitter<string>();\n\n    /**\n     * @name onTextChange\n     * @desc event emitted when the input value changes\n     */\n    @Output() public onTextChange = new EventEmitter<TagModel>();\n\n    /**\n     * - output triggered when text is pasted in the form\n     * @name onPaste\n     */\n    @Output() public onPaste = new EventEmitter<string>();\n\n    /**\n     * - output triggered when tag entered is not valid\n     * @name onValidationError\n     */\n    @Output() public onValidationError = new EventEmitter<TagModel>();\n\n    /**\n     * - output triggered when tag is edited\n     * @name onTagEdited\n     */\n    @Output() public onTagEdited = new EventEmitter<TagModel>();\n\n    /**\n     * @name dropdown\n     */\n    // @ContentChild(forwardRef(() => TagInputDropdown), {static: true}) dropdown: TagInputDropdown;\n    @ContentChild(TagInputDropdown, { static: false }) public dropdown: TagInputDropdown;\n    /**\n     * @name template\n     * @desc reference to the template if provided by the user\n     */\n    @ContentChildren(TemplateRef, { descendants: false }) public templates: QueryList<TemplateRef<any>>;\n\n    /**\n     * @name inputForm\n     */\n    @ViewChild(TagInputForm, { static: false }) public inputForm: TagInputForm;\n\n    /**\n     * @name selectedTag\n     * @desc reference to the current selected tag\n     */\n    public selectedTag: TagModel | undefined;\n\n    /**\n     * @name isLoading\n     */\n    public isLoading = false;\n\n    /**\n     * @name inputText\n     * @param text\n     */\n    public set inputText(text: string) {\n        this.inputTextValue = text;\n        this.inputTextChange.emit(text);\n    }\n\n    /**\n     * @name tags\n     * @desc list of Element items\n     */\n    @ViewChildren(TagComponent) public tags: QueryList<TagComponent>;\n\n    /**\n     * @name listeners\n     * @desc array of events that get fired using @fireEvents\n     */\n    private listeners = {\n        [constants.KEYDOWN]: <{ (fun): any }[]>[],\n        [constants.KEYUP]: <{ (fun): any }[]>[]\n    };\n\n    /**\n     * @description emitter for the 2-way data binding inputText value\n     * @name inputTextChange\n     */\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    /**\n     * @description private variable to bind get/set\n     * @name inputTextValue\n     */\n    public inputTextValue = '';\n\n    /**\n     * @desc removes the tab index if it is set - it will be passed through to the input\n     * @name tabindexAttr\n     */\n    @HostBinding('attr.tabindex')\n    public get tabindexAttr(): string {\n        return this.tabindex !== '' ? '-1' : '';\n    }\n\n    /**\n     * @name animationMetadata\n     */\n    public animationMetadata: { value: string, params: object };\n\n    public errors: string[] = [];\n\n    public isProgressBarVisible$: Observable<boolean>;\n\n    constructor(private readonly renderer: Renderer2,\n        public readonly dragProvider: DragProvider) {\n        super();\n    }\n\n    /**\n     * @name ngAfterViewInit\n     */\n    public ngAfterViewInit(): void {\n        // set up listeners\n\n        this.setUpKeypressListeners();\n        this.setupSeparatorKeysListener();\n        this.setUpInputKeydownListeners();\n\n        if (this.onTextChange.observers.length) {\n            this.setUpTextChangeSubscriber();\n        }\n\n        // if clear on blur is set to true, subscribe to the event and clear the text's form\n        if (this.clearOnBlur || this.addOnBlur) {\n            this.setUpOnBlurSubscriber();\n        }\n\n        // if addOnPaste is set to true, register the handler and add items\n        if (this.addOnPaste) {\n            this.setUpOnPasteListener();\n        }\n\n        const statusChanges$ = this.inputForm.form.statusChanges;\n\n        statusChanges$.pipe(\n            filter((status: string) => status !== 'PENDING')\n        ).subscribe(() => {\n            this.errors = this.inputForm.getErrorMessages(this.errorMessages);\n        });\n\n        this.isProgressBarVisible$ = statusChanges$.pipe(\n            map((status: string) => {\n                return status === 'PENDING' || this.isLoading;\n            })\n        );\n\n        // if hideForm is set to true, remove the input\n        if (this.hideForm) {\n            this.inputForm.destroy();\n        }\n    }\n\n    /**\n     * @name ngOnInit\n     */\n    public ngOnInit(): void {\n        // if the number of items specified in the model is > of the value of maxItems\n        // degrade gracefully and let the max number of items to be the number of items in the model\n        // though, warn the user.\n        const hasReachedMaxItems = this.maxItems !== undefined &&\n            this.items &&\n            this.items.length > this.maxItems;\n\n        if (hasReachedMaxItems) {\n            this.maxItems = this.items.length;\n            console.warn(constants.MAX_ITEMS_WARNING);\n        }\n\n        // Setting editable to false to fix problem with tags in IE still being editable when\n        // onlyFromAutocomplete is true\n        this.editable = this.onlyFromAutocomplete ? false : this.editable;\n\n        this.setAnimationMetadata();\n    }\n\n    /**\n     * @name onRemoveRequested\n     * @param tag\n     * @param index\n     */\n    public onRemoveRequested(tag: TagModel, index: number): Promise<TagModel> {\n        return new Promise(resolve => {\n            const subscribeFn = (model: TagModel) => {\n                this.removeItem(model, index);\n                resolve(tag);\n            };\n\n            this.onRemoving ?\n                this.onRemoving(tag)\n                    .pipe(first())\n                    .subscribe(subscribeFn) : subscribeFn(tag);\n        });\n    }\n\n    /**\n     * @name onAddingRequested\n     * @param fromAutocomplete {boolean}\n     * @param tag {TagModel}\n     * @param index? {number}\n     * @param giveupFocus? {boolean}\n     */\n    public onAddingRequested(fromAutocomplete: boolean, tag: TagModel,\n        index?: number, giveupFocus?: boolean): Promise<TagModel> {\n        return new Promise((resolve, reject) => {\n            const subscribeFn = (model: TagModel) => {\n                return this\n                    .addItem(fromAutocomplete, model, index, giveupFocus)\n                    .then(resolve)\n                    .catch(reject);\n            };\n\n            return this.onAdding ?\n                this.onAdding(tag)\n                    .pipe(first())\n                    .subscribe(subscribeFn, reject) : subscribeFn(tag);\n        });\n    }\n\n    /**\n     * @name appendTag\n     * @param tag {TagModel}\n     */\n    public appendTag = (tag: TagModel, index = this.items.length): void => {\n        const items = this.items;\n        const model = this.modelAsStrings ? tag[this.identifyBy] : tag;\n\n        this.items = [\n            ...items.slice(0, index),\n            model,\n            ...items.slice(index, items.length)\n        ];\n    }\n\n    /**\n     * @name createTag\n     * @param model\n     */\n    public createTag = (model: TagModel): TagModel => {\n        const trim = (val: TagModel, key: string): TagModel => {\n            return typeof val === 'string' ? val.trim() : val[key];\n        };\n\n        return {\n            ...typeof model !== 'string' ? model : {},\n            [this.displayBy]: this.trimTags ? trim(model, this.displayBy) : model,\n            [this.identifyBy]: this.trimTags ? trim(model, this.identifyBy) : model\n        };\n    }\n\n    /**\n     * @name selectItem\n     * @desc selects item passed as parameter as the selected tag\n     * @param item\n     * @param emit\n     */\n    public selectItem(item: TagModel | undefined, emit = true): void {\n        const isReadonly = item && typeof item !== 'string' && item.readonly;\n\n        if (isReadonly || this.selectedTag === item) {\n            return;\n        }\n\n        this.selectedTag = item;\n\n        if (emit) {\n            this.onSelect.emit(item);\n        }\n    }\n\n    /**\n     * @name fireEvents\n     * @desc goes through the list of the events for a given eventName, and fires each of them\n     * @param eventName\n     * @param $event\n     */\n    public fireEvents(eventName: string, $event?): void {\n        this.listeners[eventName].forEach(listener => listener.call(this, $event));\n    }\n\n    /**\n     * @name handleKeydown\n     * @desc handles action when the user hits a keyboard key\n     * @param data\n     */\n    public handleKeydown(data: any): void {\n        const event = data.event;\n        const key = event.keyCode || event.which;\n        const shiftKey = event.shiftKey || false;\n\n        switch (constants.KEY_PRESS_ACTIONS[key]) {\n            case constants.ACTIONS_KEYS.DELETE:\n                if (this.selectedTag && this.removable) {\n                    const index = this.items.indexOf(this.selectedTag);\n                    this.onRemoveRequested(this.selectedTag, index);\n                }\n                break;\n\n            case constants.ACTIONS_KEYS.SWITCH_PREV:\n                this.moveToTag(data.model, constants.PREV);\n                break;\n\n            case constants.ACTIONS_KEYS.SWITCH_NEXT:\n                this.moveToTag(data.model, constants.NEXT);\n                break;\n\n            case constants.ACTIONS_KEYS.TAB:\n                if (shiftKey) {\n                    if (this.isFirstTag(data.model)) {\n                        return;\n                    }\n\n                    this.moveToTag(data.model, constants.PREV);\n                } else {\n                    if (this.isLastTag(data.model) && (this.disable || this.maxItemsReached)) {\n                        return;\n                    }\n\n                    this.moveToTag(data.model, constants.NEXT);\n                }\n                break;\n\n            default:\n                return;\n        }\n\n        // prevent default behaviour\n        event.preventDefault();\n    }\n\n    public async onFormSubmit() {\n        try {\n            await this.onAddingRequested(false, this.formValue);\n        } catch {\n            return;\n        }\n    }\n\n    /**\n     * @name setInputValue\n     * @param value\n     */\n    public setInputValue(value: string, emitEvent = true): void {\n        const control = this.getControl();\n\n        // update form value with the transformed item\n        control.setValue(value, { emitEvent });\n    }\n\n    /**\n     * @name getControl\n     */\n    private getControl(): FormControl {\n        return this.inputForm.value as FormControl;\n    }\n\n    /**\n     * @name focus\n     * @param applyFocus\n     * @param displayAutocomplete\n     */\n    public focus(applyFocus = false, displayAutocomplete = false): void {\n        if (this.dragProvider.getState('dragging')) {\n            return;\n        }\n\n        this.selectItem(undefined, false);\n\n        if (applyFocus) {\n            this.inputForm.focus();\n            this.onFocus.emit(this.formValue);\n        }\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.onTouched();\n\n        this.onBlur.emit(this.formValue);\n    }\n\n    /**\n     * @name hasErrors\n     */\n    public hasErrors(): boolean {\n        return !!this.inputForm && this.inputForm.hasErrors();\n    }\n\n    /**\n     * @name isInputFocused\n     */\n    public isInputFocused(): boolean {\n        return !!this.inputForm && this.inputForm.isInputFocused();\n    }\n\n    /**\n     * - this is the one way I found to tell if the template has been passed and it is not\n     * the template for the menu item\n     * @name hasCustomTemplate\n     */\n    public hasCustomTemplate(): boolean {\n        const template = this.templates ? this.templates.first : undefined;\n        const menuTemplate = this.dropdown && this.dropdown.templates ?\n            this.dropdown.templates.first : undefined;\n\n        return Boolean(template && template !== menuTemplate);\n    }\n\n    /**\n     * @name maxItemsReached\n     */\n    public get maxItemsReached(): boolean {\n        return this.maxItems !== undefined &&\n            this.items.length >= this.maxItems;\n    }\n\n    /**\n     * @name formValue\n     */\n    public get formValue(): string {\n        const form = this.inputForm.value;\n\n        return form ? form.value : '';\n    }\n\n    /**3\n     * @name onDragStarted\n     * @param event\n     * @param index\n     */\n    public onDragStarted(event: DragEvent, tag: TagModel, index: number): void {\n        event.stopPropagation();\n\n        const item = { zone: this.dragZone, tag, index } as DraggedTag;\n\n        this.dragProvider.setSender(this);\n        this.dragProvider.setDraggedItem(event, item);\n        this.dragProvider.setState({ dragging: true, index });\n    }\n\n    /**\n     * @name onDragOver\n     * @param event\n     */\n    public onDragOver(event: DragEvent, index?: number): void {\n        this.dragProvider.setState({ dropping: true });\n        this.dragProvider.setReceiver(this);\n\n        event.preventDefault();\n    }\n\n    /**\n     * @name onTagDropped\n     * @param event\n     * @param index\n     */\n    public onTagDropped(event: DragEvent, index?: number): void {\n        const item = this.dragProvider.getDraggedItem(event);\n\n        if (!item || item.zone !== this.dragZone) {\n            return;\n        }\n\n        this.dragProvider.onTagDropped(item.tag, item.index, index);\n\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    /**\n     * @name isDropping\n     */\n    public isDropping(): boolean {\n        const isReceiver = this.dragProvider.receiver === this;\n        const isDropping = this.dragProvider.getState('dropping');\n\n        return Boolean(isReceiver && isDropping);\n    }\n\n    /**\n     * @name onTagBlurred\n     * @param changedElement {TagModel}\n     * @param index {number}\n     */\n    public onTagBlurred(changedElement: TagModel, index: number): void {\n        this.items[index] = changedElement;\n        this.blur();\n    }\n\n    /**\n     * @name trackBy\n     * @param items\n     */\n    public trackBy(index: number, item: TagModel): string {\n        return item[this.identifyBy];\n    }\n\n    /**\n     * @name updateEditedTag\n     * @param tag\n     */\n    public updateEditedTag({ tag, index }: { tag: TagModel, index: number }): void {\n        this.onTagEdited.emit(tag);\n    }\n\n    /**\n     *\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    public isTagValid = (tag: TagModel, fromAutocomplete = false): boolean => {\n        const selectedItem = this.dropdown ? this.dropdown.selectedItem : undefined;\n        const value = this.getItemDisplay(tag).trim();\n\n        if (selectedItem && !fromAutocomplete || !value) {\n            return false;\n        }\n\n        const dupe = this.findDupe(tag, fromAutocomplete);\n\n        // if so, give a visual cue and return false\n        if (!this.allowDupes && dupe && this.blinkIfDupe) {\n            const model = this.tags.find(item => {\n                return this.getItemValue(item.model) === this.getItemValue(dupe);\n            });\n\n            if (model) {\n                model.blink();\n            }\n        }\n\n        const isFromAutocomplete = fromAutocomplete && this.onlyFromAutocomplete;\n\n        const assertions = [\n            // 1. there must be no dupe OR dupes are allowed\n            !dupe || this.allowDupes,\n\n            // 2. check max items has not been reached\n            !this.maxItemsReached,\n\n            // 3. check item comes from autocomplete or onlyFromAutocomplete is false\n            ((isFromAutocomplete) || !this.onlyFromAutocomplete)\n        ];\n\n        return assertions.filter(Boolean).length === assertions.length;\n    }\n\n    /**\n     * @name moveToTag\n     * @param item\n     * @param direction\n     */\n    private moveToTag(item: TagModel, direction: string): void {\n        const isLast = this.isLastTag(item);\n        const isFirst = this.isFirstTag(item);\n        const stopSwitch = (direction === constants.NEXT && isLast) ||\n            (direction === constants.PREV && isFirst);\n\n        if (stopSwitch) {\n            this.focus(true);\n            return;\n        }\n\n        const offset = direction === constants.NEXT ? 1 : -1;\n        const index = this.getTagIndex(item) + offset;\n        const tag = this.getTagAtIndex(index);\n\n        return tag.select.call(tag);\n    }\n\n    /**\n     * @name isFirstTag\n     * @param item {TagModel}\n     */\n    private isFirstTag(item: TagModel): boolean {\n        return this.tags.first.model === item;\n    }\n\n    /**\n     * @name isLastTag\n     * @param item {TagModel}\n     */\n    private isLastTag(item: TagModel): boolean {\n        return this.tags.last.model === item;\n    }\n\n    /**\n     * @name getTagIndex\n     * @param item\n     */\n    private getTagIndex(item: TagModel): number {\n        const tags = this.tags.toArray();\n\n        return tags.findIndex(tag => tag.model === item);\n    }\n\n    /**\n     * @name getTagAtIndex\n     * @param index\n     */\n    private getTagAtIndex(index: number) {\n        const tags = this.tags.toArray();\n\n        return tags[index];\n    }\n\n    /**\n     * @name removeItem\n     * @desc removes an item from the array of the model\n     * @param tag {TagModel}\n     * @param index {number}\n     */\n    public removeItem(tag: TagModel, index: number): void {\n        this.items = this.getItemsWithout(index);\n\n        // if the removed tag was selected, set it as undefined\n        if (this.selectedTag === tag) {\n            this.selectItem(undefined, false);\n        }\n\n        // focus input\n        this.focus(true, false);\n\n        // emit remove event\n        this.onRemove.emit(tag);\n    }\n\n    /**\n     * @name addItem\n     * @desc adds the current text model to the items array\n     * @param fromAutocomplete {boolean}\n     * @param item {TagModel}\n     * @param index? {number}\n     * @param giveupFocus? {boolean}\n     */\n    private addItem(fromAutocomplete = false, item: TagModel, index?: number, giveupFocus?: boolean):\n        Promise<TagModel> {\n        const display = this.getItemDisplay(item);\n        const tag = this.createTag(item);\n\n        if (fromAutocomplete) {\n            this.setInputValue(this.getItemValue(item, true));\n        }\n\n        return new Promise((resolve, reject) => {\n            /**\n             * @name reset\n             */\n            const reset = (): void => {\n                // reset control and focus input\n                this.setInputValue('');\n\n                if (giveupFocus) {\n                    this.focus(false, false);\n                } else {\n                    // focus input\n                    this.focus(true, false);\n                }\n\n                resolve(display);\n            };\n\n            const appendItem = (): void => {\n                this.appendTag(tag, index);\n\n                // emit event\n                this.onAdd.emit(tag);\n\n                if (!this.dropdown) {\n                    return;\n                }\n\n                this.dropdown.hide();\n\n                if (this.dropdown.showDropdownIfEmpty) {\n                    this.dropdown.show();\n                }\n            };\n\n            const status = this.inputForm.form.status;\n            const isTagValid = this.isTagValid(tag, fromAutocomplete);\n\n            const onValidationError = () => {\n                this.onValidationError.emit(tag);\n                return reject();\n            };\n\n            if (status === 'VALID' && isTagValid) {\n                appendItem();\n                return reset();\n            }\n\n            if (status === 'INVALID' || !isTagValid) {\n                reset();\n                return onValidationError();\n            }\n\n            if (status === 'PENDING') {\n                const statusUpdate$ = this.inputForm.form.statusChanges;\n\n                return statusUpdate$\n                    .pipe(\n                        filter(statusUpdate => statusUpdate !== 'PENDING'),\n                        first()\n                    )\n                    .subscribe((statusUpdate) => {\n                        if (statusUpdate === 'VALID' && isTagValid) {\n                            appendItem();\n                            return reset();\n                        } else {\n                            reset();\n                            return onValidationError();\n                        }\n                    });\n            }\n        });\n    }\n\n    /**\n     * @name setupSeparatorKeysListener\n     */\n    private setupSeparatorKeysListener(): void {\n        const useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;\n        const listener = ($event) => {\n            const hasKeyCode = this.separatorKeyCodes.indexOf($event.keyCode) >= 0;\n            const hasKey = this.separatorKeys.indexOf($event.key) >= 0;\n            // the keyCode of keydown event is 229 when IME is processing the key event.\n            const isIMEProcessing = $event.keyCode === 229;\n\n            if (hasKeyCode || (hasKey && !isIMEProcessing)) {\n                $event.preventDefault();\n                this.onAddingRequested(false, this.formValue)\n                    .catch(() => { });\n            }\n        };\n\n        listen.call(this, constants.KEYDOWN, listener, useSeparatorKeys);\n    }\n\n    /**\n     * @name setUpKeypressListeners\n     */\n    private setUpKeypressListeners(): void {\n        const listener = ($event) => {\n            const isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;\n\n            if (isCorrectKey &&\n                !this.formValue &&\n                this.items.length) {\n                this.tags.last.select.call(this.tags.last);\n            }\n        };\n\n        // setting up the keypress listeners\n        listen.call(this, constants.KEYDOWN, listener);\n    }\n\n    /**\n     * @name setUpKeydownListeners\n     */\n    private setUpInputKeydownListeners(): void {\n        this.inputForm.onKeydown.subscribe(event => {\n            if (event.key === 'Backspace' && this.formValue.trim() === '') {\n                event.preventDefault();\n            }\n        });\n    }\n\n    /**\n     * @name setUpOnPasteListener\n     */\n    private setUpOnPasteListener() {\n        const input = this.inputForm.input.nativeElement;\n\n        // attach listener to input\n        this.renderer.listen(input, 'paste', (event) => {\n            this.onPasteCallback(event);\n\n            event.preventDefault();\n            return true;\n        });\n    }\n\n    /**\n     * @name setUpTextChangeSubscriber\n     */\n    private setUpTextChangeSubscriber(): void {\n        this.inputForm.form\n            .valueChanges\n            .pipe(\n                debounceTime(this.onTextChangeDebounce)\n            )\n            .subscribe((value: { item: string }) => {\n                this.onTextChange.emit(value.item);\n            });\n    }\n\n    /**\n     * @name setUpOnBlurSubscriber\n     */\n    private setUpOnBlurSubscriber(): void {\n        const filterFn = (): boolean => {\n            const isVisible = this.dropdown && this.dropdown.isVisible;\n            return !isVisible && !!this.formValue;\n        };\n\n        this.inputForm\n            .onBlur\n            .pipe(\n                debounceTime(100),\n                filter(filterFn)\n            )\n            .subscribe(() => {\n                const reset = () => this.setInputValue('');\n\n                if (this.addOnBlur) {\n                    return this\n                        .onAddingRequested(false, this.formValue, undefined, true)\n                        .then(reset)\n                        .catch(reset);\n                }\n\n                reset();\n            });\n    }\n\n    /**\n     * @name findDupe\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    private findDupe(tag: TagModel, isFromAutocomplete: boolean): TagModel | undefined {\n        const identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;\n        const id = tag[identifyBy];\n\n        return this.items.find(item => this.getItemValue(item) === id);\n    }\n\n    /**\n     * @name onPasteCallback\n     * @param data\n     */\n    private onPasteCallback = async (data: ClipboardEvent) => {\n        interface IEWindow extends Window {\n            clipboardData: DataTransfer;\n        }\n\n        const getText = (): string => {\n            const isIE = Boolean((window as IEWindow).clipboardData);\n            const clipboardData = isIE ? (\n                (window as IEWindow).clipboardData\n            ) : data.clipboardData;\n            const type = isIE ? 'Text' : 'text/plain';\n            return clipboardData === null ? '' : clipboardData.getData(type) || '';\n        };\n\n        const text = getText();\n\n        const requests = text\n            .split(this.pasteSplitPattern)\n            .map(item => {\n                const tag = this.createTag(item);\n                this.setInputValue(tag[this.displayBy]);\n                return this.onAddingRequested(false, tag);\n            });\n\n        const resetInput = () => setTimeout(() => this.setInputValue(''), 50);\n\n        Promise.all(requests).then(() => {\n            this.onPaste.emit(text);\n            resetInput();\n        })\n            .catch(resetInput);\n    }\n\n    /**\n     * @name setAnimationMetadata\n     */\n    private setAnimationMetadata(): void {\n        this.animationMetadata = {\n            value: 'in',\n            params: { ...this.animationDuration }\n        };\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'delete-icon',\n    templateUrl: './icon.html',\n    styleUrls: ['./icon.scss']\n})\nexport class DeleteIconComponent {}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule, COMPOSITION_BUFFER_MODE } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Ng2DropdownModule } from 'ng2-material-dropdown';\nimport { HighlightPipe } from './core/pipes/highlight.pipe';\nimport { DragProvider } from './core/providers/drag-provider';\nimport { OptionsProvider, Options } from './core/providers/options-provider';\nimport { TagInputComponent } from './components/tag-input/tag-input';\nimport { DeleteIconComponent } from './components/icon/icon';\nimport { TagInputForm } from './components/tag-input-form/tag-input-form.component';\nimport { TagComponent } from './components/tag/tag.component';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagRipple } from './components/tag/tag-ripple.component';\n\nconst optionsProvider = new OptionsProvider();\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        Ng2DropdownModule\n    ],\n    declarations: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    exports: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    providers: [\n        DragProvider,\n        { provide: COMPOSITION_BUFFER_MODE, useValue: false },\n    ]\n})\nexport class TagInputModule {\n    /**\n     * @name withDefaults\n     * @param options {Options}\n     */\n    public static withDefaults(options: Options): void {\n        optionsProvider.setOptions(options);\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {animations as Éµb} from './components/tag-input/animations';\nexport {TagInputAccessor as Éµa} from './core/accessor';\nexport {HighlightPipe as Éµd} from './core/pipes/highlight.pipe';\nexport {DragProvider as Éµc} from './core/providers/drag-provider';"]}