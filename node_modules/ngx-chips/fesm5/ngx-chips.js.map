{"version":3,"file":"ngx-chips.js","sources":["ng://ngx-chips/core/pipes/highlight.pipe.ts","ng://ngx-chips/core/constants/index.ts","ng://ngx-chips/core/providers/drag-provider.ts","ng://ngx-chips/defaults.ts","ng://ngx-chips/core/providers/options-provider.ts","ng://ngx-chips/core/accessor.ts","ng://ngx-chips/core/helpers/listen.ts","ng://ngx-chips/components/tag-input-form/tag-input-form.component.ts","ng://ngx-chips/components/tag/tag-ripple.component.ts","ng://ngx-chips/components/tag/tag.component.ts","ng://ngx-chips/components/tag-input/animations.ts","ng://ngx-chips/components/dropdown/tag-input-dropdown.component.ts","ng://ngx-chips/components/tag-input/tag-input.ts","ng://ngx-chips/components/icon/icon.ts","ng://ngx-chips/tag-input.module.ts","ng://ngx-chips/ngx-chips.ts"],"sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\n\nconst escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n    /**\n     * @name transform\n     * @param value {string}\n     * @param arg {string}\n     */\n    public transform(value: string, arg: string): string {\n        if (!arg.trim()) {\n            return value;\n        }\n\n        try {\n            const regex = new RegExp(`(${escape(arg)})`, 'i');\n            return value.replace(regex, '<b>$1</b>');\n        } catch (e) {\n            return value;\n        }\n    }\n}\n","/*\n** constants and default values for <tag-input>\n */\n\nexport const PLACEHOLDER = '+ Tag';\nexport const SECONDARY_PLACEHOLDER = 'Enter a new tag';\nexport const KEYDOWN = 'keydown';\nexport const KEYUP = 'keyup';\nexport const FOCUS = 'focus';\nexport const MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';\n\nexport const ACTIONS_KEYS = {\n    DELETE: 'DELETE',\n    SWITCH_PREV: 'SWITCH_PREV',\n    SWITCH_NEXT: 'SWITCH_NEXT',\n    TAB: 'TAB'\n};\n\nexport const KEY_PRESS_ACTIONS = {\n    8: ACTIONS_KEYS.DELETE,\n    37: ACTIONS_KEYS.SWITCH_PREV,\n    39: ACTIONS_KEYS.SWITCH_NEXT,\n    9: ACTIONS_KEYS.TAB\n};\n\nexport const DRAG_AND_DROP_KEY = 'Text';\nexport const NEXT = 'NEXT';\nexport const PREV = 'PREV';\n\n","import { TagInputComponent } from '../../components/tag-input/tag-input';\nimport { TagModel } from '../accessor';\n\nimport { Injectable } from '@angular/core';\n\nexport declare interface DraggedTag {\n    index: number;\n    tag: TagModel;\n    zone: string;\n}\n\nimport { DRAG_AND_DROP_KEY } from '../../core/constants';\n\nexport declare interface State {\n    dragging: boolean;\n    dropping: boolean;\n    index: number | undefined;\n}\n\nexport declare type StateProperty = keyof State;\n\n@Injectable()\nexport class DragProvider {\n    public sender: TagInputComponent;\n    public receiver: TagInputComponent;\n\n    public state: State = {\n        dragging: false,\n        dropping: false,\n        index: undefined\n    };\n\n    /**\n     * @name setDraggedItem\n     * @param event\n     * @param tag\n     */\n    public setDraggedItem(event: DragEvent, tag: DraggedTag): void {\n        if (event && event.dataTransfer) {\n            event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));\n        }\n    }\n\n    /**\n     * @name getDraggedItem\n     * @param event\n     */\n    public getDraggedItem(event: DragEvent): DraggedTag | undefined {\n        if (event && event.dataTransfer) {\n            const data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);\n            try {\n                return JSON.parse(data) as DraggedTag;\n            } catch {\n                return;\n            }\n        }\n    }\n\n    /**\n     * @name setSender\n     * @param sender\n     */\n    public setSender(sender: TagInputComponent): void {\n        this.sender = sender;\n    }\n\n    /**\n     * @name setReceiver\n     * @param receiver\n     */\n    public setReceiver(receiver: TagInputComponent): void {\n        this.receiver = receiver;\n    }\n\n    /**\n     * @name onTagDropped\n     * @param tag\n     * @param indexDragged\n     * @param indexDropped\n     */\n    public onTagDropped(tag: TagModel, indexDragged: number, indexDropped?: number): void {\n        this.onDragEnd();\n\n        this.sender.onRemoveRequested(tag, indexDragged);\n        this.receiver.onAddingRequested(false, tag, indexDropped);\n    }\n\n    /**\n     * @name setState\n     * @param state\n     */\n    public setState(state: { [K in StateProperty]?: State[K] }): void {\n        this.state = { ...this.state, ...state };\n    }\n\n    /**\n     * @name getState\n     * @param key\n     */\n    public getState(key?: StateProperty): State | State[StateProperty] {\n        return key ? this.state[key] : this.state;\n    }\n\n    /**\n     * @name onDragEnd\n     */\n    public onDragEnd(): void {\n        this.setState({\n            dragging: false,\n            dropping: false,\n            index: undefined\n        });\n    }\n}\n","import { Observable } from 'rxjs';\nimport { ValidatorFn, AsyncValidatorFn } from '@angular/forms';\n\nimport { SECONDARY_PLACEHOLDER, PLACEHOLDER } from './core/constants/index';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagModel } from './core/accessor';\n\nexport interface TagInputOptions {\n    separatorKeys: string[];\n    separatorKeyCodes: number[];\n    maxItems: number;\n    placeholder: string;\n    secondaryPlaceholder: string;\n    validators: ValidatorFn[];\n    asyncValidators: AsyncValidatorFn[];\n    onlyFromAutocomplete: boolean;\n    errorMessages: { [key: string]: string; };\n    theme: '';\n    onTextChangeDebounce: number;\n    inputId: string | null;\n    inputClass: string;\n    clearOnBlur: boolean;\n    hideForm: boolean;\n    addOnBlur: boolean;\n    addOnPaste: boolean;\n    pasteSplitPattern: string | RegExp;\n    blinkIfDupe: boolean;\n    removable: boolean;\n    editable: boolean;\n    allowDupes: boolean;\n    modelAsStrings: boolean;\n    trimTags: boolean;\n    ripple: boolean;\n    tabIndex: string;\n    disable: boolean;\n    dragZone: string;\n    onRemoving?: (tag: TagModel) => Observable<TagModel>;\n    onAdding?: (tag: TagModel) => Observable<TagModel>;\n    displayBy: string;\n    identifyBy: string;\n    animationDuration: {\n        enter: string,\n        leave: string\n    };\n}\n\nexport interface TagInputDropdownOptions {\n    displayBy: string;\n    identifyBy: string;\n    appendToBody: boolean;\n    offset: string;\n    focusFirstElement: boolean;\n    showDropdownIfEmpty: boolean;\n    minimumTextLength: number;\n    limitItemsTo: number;\n    keepOpen: boolean;\n    zIndex: number;\n    dynamicUpdate: boolean;\n    matchingFn: (value: string, target: TagModel) => boolean;\n}\n\nexport const defaults = {\n    tagInput: <TagInputOptions>{\n        separatorKeys: [],\n        separatorKeyCodes: [],\n        maxItems: Infinity,\n        placeholder: PLACEHOLDER,\n        secondaryPlaceholder: SECONDARY_PLACEHOLDER,\n        validators: [],\n        asyncValidators: [],\n        onlyFromAutocomplete: false,\n        errorMessages: {},\n        theme: '',\n        onTextChangeDebounce: 250,\n        inputId: null,\n        inputClass: '',\n        clearOnBlur: false,\n        hideForm: false,\n        addOnBlur: false,\n        addOnPaste: false,\n        pasteSplitPattern: ',',\n        blinkIfDupe: true,\n        removable: true,\n        editable: false,\n        allowDupes: false,\n        modelAsStrings: false,\n        trimTags: true,\n        ripple: true,\n        tabIndex: '',\n        disable: false,\n        dragZone: '',\n        onRemoving: undefined,\n        onAdding: undefined,\n        displayBy: 'display',\n        identifyBy: 'value',\n        animationDuration: {\n            enter: '250ms',\n            leave: '150ms'\n        }\n    },\n    dropdown: <TagInputDropdownOptions>{\n        displayBy: 'display',\n        identifyBy: 'value',\n        appendToBody: true,\n        offset: '50 0',\n        focusFirstElement: false,\n        showDropdownIfEmpty: false,\n        minimumTextLength: 1,\n        limitItemsTo: Infinity,\n        keepOpen: true,\n        dynamicUpdate: true,\n        zIndex: 1000,\n        matchingFn\n    }\n};\n\n/**\n * @name matchingFn\n * @param this\n * @param value\n * @param target\n */\nfunction matchingFn(this: TagInputDropdown, value: string, target: TagModel): boolean {\n    const targetValue = target[this.displayBy].toString();\n\n    return targetValue && targetValue\n        .toLowerCase()\n        .indexOf(value.toLowerCase()) >= 0;\n}\n","import { defaults, TagInputOptions, TagInputDropdownOptions } from '../../defaults';\n\nexport type Options = {\n    tagInput?: {\n        [P in keyof TagInputOptions]?: TagInputOptions[P];\n    };\n    dropdown?: {\n        [P in keyof TagInputDropdownOptions]?: TagInputDropdownOptions[P];\n    }\n};\n\nexport class OptionsProvider {\n    public static defaults = defaults;\n\n    public setOptions(options: Options): void {\n        OptionsProvider.defaults.tagInput = {...defaults.tagInput, ...options.tagInput};\n        OptionsProvider.defaults.dropdown = {...defaults.dropdown, ...options.dropdown};\n    }\n}\n\nexport { TagInputDropdownOptions, TagInputOptions };\n","import { ControlValueAccessor } from '@angular/forms';\nimport { Input } from '@angular/core';\nimport { OptionsProvider } from './providers/options-provider';\nimport { TagInputDropdown } from '../components/dropdown/tag-input-dropdown.component';\n\nexport class TagModelClass {\n    [key: string]: any;\n}\n\nexport type TagModel = string | TagModelClass;\n\nexport function isObject(obj: any): boolean {\n    return obj === Object(obj);\n}\n\nexport class TagInputAccessor implements ControlValueAccessor {\n    private _items: TagModel[] = [];\n    private _onTouchedCallback: () => void;\n    private _onChangeCallback: (items: TagModel[]) => void;\n\n    public dropdown: TagInputDropdown;\n\n    /**\n     * @name displayBy\n     */\n    @Input() public displayBy: string = OptionsProvider.defaults.tagInput.displayBy;\n\n    /**\n     * @name identifyBy\n     */\n    @Input() public identifyBy: string = OptionsProvider.defaults.tagInput.identifyBy;\n\n    public get items(): TagModel[] {\n        return this._items;\n    }\n\n    public set items(items: TagModel[]) {\n        this._items = items;\n        this._onChangeCallback(this._items);\n    }\n\n    public onTouched() {\n        this._onTouchedCallback();\n    }\n\n    public writeValue(items: any[]) {\n        this._items = items || [];\n    }\n\n    public registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    /**\n     * @name getItemValue\n     * @param item\n     * @param fromDropdown\n     */\n    public getItemValue(item: TagModel, fromDropdown = false): string {\n        const property = fromDropdown && this.dropdown ? this.dropdown.identifyBy : this.identifyBy;\n        return isObject(item) ? item[property] : item;\n    }\n\n    /**\n     * @name getItemDisplay\n     * @param item\n     * @param fromDropdown\n     */\n    public getItemDisplay(item: TagModel, fromDropdown = false): string {\n        const property = fromDropdown && this.dropdown ? this.dropdown.displayBy : this.displayBy;\n        return isObject(item) ? item[property] : item;\n    }\n\n    /**\n     * @name getItemsWithout\n     * @param index\n     */\n    protected getItemsWithout(index: number): TagModel[] {\n        return this.items.filter((item, position) => position !== index);\n    }\n}\n","\n/**\n * @name listen\n * @param listenerType\n * @param action\n * @param condition\n */\nexport function listen(listenerType: string, action: () => any, condition = true): void {\n    // if the event provided does not exist, throw an error\n    if (!this.listeners.hasOwnProperty(listenerType)) {\n        throw new Error('The event entered may be wrong');\n    }\n\n    // if a condition is present and is false, exit early\n    if (!condition) {\n        return;\n    }\n\n    // fire listener\n    this.listeners[listenerType].push(action);\n}\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { AsyncValidatorFn, FormControl, FormGroup, ValidatorFn } from '@angular/forms';\n\n@Component({\n    selector: 'tag-input-form',\n    styleUrls: ['./tag-input-form.style.scss'],\n    templateUrl: './tag-input-form.template.html'\n})\nexport class TagInputForm implements OnInit, OnChanges {\n    /**\n     * @name onSubmit\n     */\n    @Output() public onSubmit: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onBlur\n     */\n    @Output() public onBlur: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onFocus\n     */\n    @Output() public onFocus: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeyup\n     */\n    @Output() public onKeyup: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeydown\n     */\n    @Output() public onKeydown: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name inputTextChange\n     */\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    // inputs\n\n    /**\n     * @name placeholder\n     */\n    @Input() public placeholder: string;\n\n    /**\n     * @name validators\n     */\n    @Input() public validators: ValidatorFn[] = [];\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public asyncValidators: AsyncValidatorFn[] = [];\n\n    /**\n     * @name inputId\n     */\n    @Input() public inputId: string;\n\n    /**\n     * @name inputClass\n     */\n    @Input() public inputClass: string;\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    @Input() public tabindex = '';\n\n    /**\n     * @name disabled\n     */\n    @Input() public disabled = false;\n\n    /**\n     * @name input\n     */\n    @ViewChild('input', { static: false }) public input;\n\n    /**\n     * @name form\n     */\n    public form: FormGroup;\n\n    /**\n     * @name inputText\n     */\n    @Input()\n    public get inputText(): string {\n        return this.item.value;\n    }\n\n    /**\n     * @name inputText\n     * @param text {string}\n     */\n    public set inputText(text: string) {\n        this.item.setValue(text);\n\n        this.inputTextChange.emit(text);\n    }\n\n    private readonly item: FormControl = new FormControl({ value: '', disabled: this.disabled });\n\n    ngOnInit() {\n        this.item.setValidators(this.validators);\n        this.item.setAsyncValidators(this.asyncValidators);\n\n        // creating form\n        this.form = new FormGroup({\n            item: this.item\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.disabled && !changes.disabled.firstChange) {\n            if (changes.disabled.currentValue) {\n                this.form.controls['item'].disable();\n            } else {\n                this.form.controls['item'].enable();\n            }\n        }\n    }\n\n    /**\n     * @name value\n     */\n    public get value(): FormControl {\n        return this.form.get('item') as FormControl;\n    }\n\n    /**\n     * @name isInputFocused\n     */\n    public isInputFocused(): boolean {\n        const doc = typeof document !== 'undefined' ? document : undefined;\n        return doc ? doc.activeElement === this.input.nativeElement : false;\n    }\n\n    /**\n     * @name getErrorMessages\n     * @param messages\n     */\n    public getErrorMessages(messages: { [key: string]: string }): string[] {\n        return Object.keys(messages)\n            .filter(err => this.value.hasError(err))\n            .map(err => messages[err]);\n    }\n\n    /**\n     * @name hasErrors\n     */\n    public hasErrors(): boolean {\n        const { dirty, value, valid } = this.form;\n        return dirty && value.item && !valid;\n    }\n\n    /**\n     * @name focus\n     */\n    public focus(): void {\n        this.input.nativeElement.focus();\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.input.nativeElement.blur();\n    }\n\n    /**\n     * @name getElementPosition\n     */\n    public getElementPosition(): ClientRect {\n        return this.input.nativeElement.getBoundingClientRect();\n    }\n\n    /**\n     * - removes input from the component\n     * @name destroy\n     */\n    public destroy(): void {\n        const input = this.input.nativeElement;\n        input.parentElement.removeChild(input);\n    }\n\n    /**\n     * @name onKeyDown\n     * @param $event\n     */\n    public onKeyDown($event) {\n        this.inputText = this.value.value;\n        if ($event.key === 'Enter') {\n            this.submit($event);\n        } else {\n          return this.onKeydown.emit($event);\n        }\n    }\n\n    /**\n     * @name onKeyUp\n     * @param $event\n     */\n    public onKeyUp($event) {\n        this.inputText = this.value.value;\n        return this.onKeyup.emit($event);\n    }\n\n    /**\n     * @name submit\n     */\n    public submit($event: any): void {\n        $event.preventDefault();\n        this.onSubmit.emit($event);\n    }\n}\n","import {\n    Component,\n    Input\n} from '@angular/core';\n\n\nimport {\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state\n} from '@angular/animations';\n\n@Component({\n    selector: 'tag-ripple',\n    styles: [`\n        :host {\n            width: 100%;\n            height: 100%;\n            left: 0;\n            overflow: hidden;\n            position: absolute;\n        }\n\n        .tag-ripple {\n            background: rgba(0, 0, 0, 0.1);\n            top: 50%;\n            left: 50%;\n            height: 100%;\n            transform: translate(-50%, -50%);\n            position: absolute;\n        }\n    `],\n    template: `\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\n    `,\n    animations: [\n        trigger('ink', [\n            state('none', style({width: 0, opacity: 0})),\n            transition('none => clicked', [\n                animate(300, keyframes([\n                    style({opacity: 1, offset: 0, width: '30%', borderRadius: '100%'}),\n                    style({opacity: 1, offset: 0.5, width: '50%'}),\n                    style({opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px'})\n                ]))\n            ])\n        ])\n    ]\n})\nexport class TagRipple {\n    @Input() public state = 'none';\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    TemplateRef,\n    ElementRef,\n    HostListener,\n    HostBinding,\n    ViewChild,\n    ChangeDetectorRef,\n    Renderer2\n} from '@angular/core';\n\nimport { TagModel } from '../../core/accessor';\nimport { TagRipple } from '../tag/tag-ripple.component';\nimport { EventLike } from '../../core/helpers/event-like';\n\n// mocking navigator\nconst navigator = typeof window !== 'undefined' ? window.navigator : {\n    userAgent: 'Chrome',\n    vendor: 'Google Inc'\n};\n\nconst isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n\n@Component({\n    selector: 'tag',\n    templateUrl: './tag.template.html',\n    styleUrls: ['./tag-component.style.scss']\n})\nexport class TagComponent {\n    /**\n     * @name model {TagModel}\n     */\n    @Input()\n    public model: TagModel;\n\n    /**\n     * @name removable {boolean}\n     */\n    @Input()\n    public removable: boolean;\n\n    /**\n     * @name editable {boolean}\n     */\n    @Input()\n    public editable: boolean;\n\n    /**\n     * @name template {TemplateRef<any>}\n     */\n    @Input()\n    public template: TemplateRef<any>;\n\n    /**\n     * @name displayBy {string}\n     */\n    @Input()\n    public displayBy: string;\n\n    /**\n     * @name identifyBy {string}\n     */\n    @Input()\n    public identifyBy: string;\n\n    /**\n     * @name index {number}\n     */\n    @Input()\n    public index: number;\n\n    /**\n     * @name hasRipple\n     */\n    @Input()\n    public hasRipple: boolean;\n\n    /**\n     * @name disabled\n     */\n    @Input()\n    public disabled = false;\n\n    /**\n     * @name canAddTag\n     */\n    @Input()\n    public canAddTag: (tag: TagModel) => boolean;\n\n    /**\n     * @name onSelect\n     */\n    @Output()\n    public onSelect: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     */\n    @Output()\n    public onRemove: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onBlur\n     */\n    @Output()\n    public onBlur: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onKeyDown\n     */\n    @Output()\n    public onKeyDown: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * @name onTagEdited\n     */\n    @Output()\n    public onTagEdited: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name readonly {boolean}\n     */\n    public get readonly(): boolean {\n        return typeof this.model !== 'string' && this.model.readonly === true;\n    }\n\n    /**\n     * @name editing\n     */\n    public editing = false;\n\n    /**\n     * @name moving\n     */\n    @HostBinding('class.moving')\n    public moving: boolean;\n\n    /**\n     * @name rippleState\n     */\n    public rippleState = 'none';\n\n    /**\n     * @name ripple {TagRipple}\n     */\n    @ViewChild(TagRipple, { static: false })\n    public ripple: TagRipple;\n\n    constructor(\n        public element: ElementRef,\n        public renderer: Renderer2,\n        private cdRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * @name select\n     */\n    public select($event?: MouseEvent): void {\n        if (this.readonly || this.disabled) {\n            return;\n        }\n\n        if ($event) {\n            $event.stopPropagation();\n        }\n\n        this.focus();\n\n        this.onSelect.emit(this.model);\n    }\n\n    /**\n     * @name remove\n     */\n    public remove($event: MouseEvent): void {\n        $event.stopPropagation();\n        this.onRemove.emit(this);\n    }\n\n    /**\n     * @name focus\n     */\n    public focus(): void {\n        this.element.nativeElement.focus();\n    }\n\n    public move(): void {\n        this.moving = true;\n    }\n\n    /**\n     * @name keydown\n     * @param event\n     */\n    @HostListener('keydown', ['$event'])\n    public keydown(event: EventLike): void {\n        if (this.editing) {\n            if (event.keyCode === 13) {\n                return this.disableEditMode(event);\n            }\n        } else {\n            this.onKeyDown.emit({ event, model: this.model });\n        }\n    }\n\n    /**\n     * @name blink\n     */\n    public blink(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add('blink');\n\n        setTimeout(() => classList.remove('blink'), 50);\n    }\n\n    /**\n     * @name toggleEditMode\n     */\n    public toggleEditMode(): void {\n        if (this.editable) {\n            return this.editing ? undefined : this.activateEditMode();\n        }\n    }\n\n    /**\n     * @name onBlurred\n     * @param event\n     */\n    public onBlurred(event: any): void {\n        // Checks if it is editable first before handeling the onBlurred event in order to prevent\n        // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\n        if (!this.editable) {\n            return;\n        }\n\n        this.disableEditMode();\n\n        const value: string = event.target.innerText;\n        const result =\n            typeof this.model === 'string'\n                ? value\n                : { ...this.model, [this.displayBy]: value };\n\n        this.onBlur.emit(result);\n    }\n\n    /**\n     * @name getDisplayValue\n     * @param item\n     */\n    public getDisplayValue(item: TagModel): string {\n        return typeof item === 'string' ? item : item[this.displayBy];\n    }\n\n    /**\n     * @desc returns whether the ripple is visible or not\n     * only works in Chrome\n     * @name isRippleVisible\n     */\n    public get isRippleVisible(): boolean {\n        return !this.readonly && !this.editing && isChrome && this.hasRipple;\n    }\n\n    /**\n     * @name disableEditMode\n     * @param $event\n     */\n    public disableEditMode($event?: EventLike): void {\n        const classList = this.element.nativeElement.classList;\n        const input = this.getContentEditableText();\n\n        this.editing = false;\n        classList.remove('tag--editing');\n\n        if (!input) {\n            this.setContentEditableText(this.model);\n            return;\n        }\n\n        this.storeNewValue(input);\n        this.cdRef.detectChanges();\n\n        if ($event) {\n            $event.preventDefault();\n        }\n    }\n\n    /**\n     * @name isDeleteIconVisible\n     */\n    public isDeleteIconVisible(): boolean {\n        return (\n            !this.readonly && !this.disabled && this.removable && !this.editing\n        );\n    }\n\n    /**\n     * @name getContentEditableText\n     */\n    private getContentEditableText(): string {\n        const input = this.getContentEditable();\n\n        return input ? input.innerText.trim() : '';\n    }\n\n    /**\n     * @name setContentEditableText\n     * @param model\n     */\n    private setContentEditableText(model: TagModel) {\n        const input = this.getContentEditable();\n        const value = this.getDisplayValue(model);\n\n        input.innerText = value;\n    }\n\n    /**\n     * @name\n     */\n    private activateEditMode(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add('tag--editing');\n\n        this.editing = true;\n    }\n\n    /**\n     * @name storeNewValue\n     * @param input\n     */\n    private storeNewValue(input: string): void {\n        const exists = (tag: TagModel) => {\n            return typeof tag === 'string'\n                ? tag === input\n                : tag[this.displayBy] === input;\n        };\n\n        const hasId = () => {\n            return this.model[this.identifyBy] !== this.model[this.displayBy];\n        };\n\n        // if the value changed, replace the value in the model\n        if (exists(this.model)) {\n            return;\n        }\n\n        const model =\n            typeof this.model === 'string'\n                ? input\n                : {\n                      index: this.index,\n                      [this.identifyBy]: hasId()\n                          ? this.model[this.identifyBy]\n                          : input,\n                      [this.displayBy]: input\n                  };\n\n        if (this.canAddTag(model)) {\n            this.onTagEdited.emit({ tag: model, index: this.index });\n        } else {\n            this.setContentEditableText(this.model);\n        }\n    }\n\n    /**\n     * @name getContentEditable\n     */\n    private getContentEditable(): HTMLInputElement {\n        return this.element.nativeElement.querySelector('[contenteditable]');\n    }\n}\n","import {\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n/**\n * @name animations\n */\nexport const animations = [\n    trigger('animation', [\n        state('in', style({\n            opacity: 1\n        })),\n        state('out', style({\n            opacity: 0\n        })),\n        transition(':enter', [\n            animate('{{ enter }}', keyframes([\n                style({opacity: 0, offset: 0, transform: 'translate(0px, 20px)'}),\n                style({opacity: 0.3, offset: 0.3, transform: 'translate(0px, -10px)'}),\n                style({opacity: 0.5, offset: 0.5, transform: 'translate(0px, 0px)'}),\n                style({opacity: 0.75, offset: 0.75, transform: 'translate(0px, 5px)'}),\n                style({opacity: 1, offset: 1, transform: 'translate(0px, 0px)'})\n            ]))\n        ]),\n        transition(':leave', [\n            animate('{{ leave }}', keyframes([\n                style({opacity: 1, transform: 'translateX(0)', offset: 0}),\n                style({opacity: 1, transform: 'translateX(-15px)', offset: 0.7}),\n                style({opacity: 0, transform: 'translateX(100%)', offset: 1.0})\n            ]))\n        ])\n    ])\n];\n","import {\n  Component,\n  ContentChildren,\n  EventEmitter,\n  HostListener,\n  Injector,\n  Input,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  AfterViewInit\n} from '@angular/core';\n\n// rx\nimport { Observable } from 'rxjs';\nimport { filter, first, debounceTime } from 'rxjs/operators';\n\nimport { Ng2Dropdown, Ng2MenuItem } from 'ng2-material-dropdown';\nimport { defaults } from '../../defaults';\nimport { TagModel } from '../../core/accessor';\nimport { TagInputComponent } from '../tag-input/tag-input';\n\n@Component({\n  selector: 'tag-input-dropdown',\n  templateUrl: './tag-input-dropdown.template.html'\n})\nexport class TagInputDropdown implements AfterViewInit {\n  /**\n   * @name dropdown\n   */\n  @ViewChild(Ng2Dropdown, { static: false }) public dropdown: Ng2Dropdown;\n\n  /**\n   * @name menuTemplate\n   * @desc reference to the template if provided by the user\n   */\n  @ContentChildren(TemplateRef) public templates: QueryList<TemplateRef<any>>;\n\n  /**\n   * @name offset\n   */\n  @Input() public offset: string = defaults.dropdown.offset;\n\n  /**\n   * @name focusFirstElement\n   */\n  @Input() public focusFirstElement = defaults.dropdown.focusFirstElement;\n\n  /**\n   * - show autocomplete dropdown if the value of input is empty\n   * @name showDropdownIfEmpty\n   */\n  @Input() public showDropdownIfEmpty = defaults.dropdown.showDropdownIfEmpty;\n\n  /**\n   * @description observable passed as input which populates the autocomplete items\n   * @name autocompleteObservable\n   */\n  @Input() public autocompleteObservable: (text: string) => Observable<any>;\n\n  /**\n   * - desc minimum text length in order to display the autocomplete dropdown\n   * @name minimumTextLength\n   */\n  @Input() public minimumTextLength = defaults.dropdown.minimumTextLength;\n\n  /**\n   * - number of items to display in the autocomplete dropdown\n   * @name limitItemsTo\n   */\n  @Input() public limitItemsTo: number = defaults.dropdown.limitItemsTo;\n\n  /**\n   * @name displayBy\n   */\n  @Input() public displayBy = defaults.dropdown.displayBy;\n\n  /**\n   * @name identifyBy\n   */\n  @Input() public identifyBy = defaults.dropdown.identifyBy;\n\n  /**\n   * @description a function a developer can use to implement custom matching for the autocomplete\n   * @name matchingFn\n   */\n  @Input() public matchingFn: (value: string, target: TagModel) => boolean =\n    defaults.dropdown.matchingFn;\n\n  /**\n   * @name appendToBody\n   */\n  @Input() public appendToBody = defaults.dropdown.appendToBody;\n\n  /**\n   * @name keepOpen\n   * @description option to leave dropdown open when adding a new item\n   */\n  @Input() public keepOpen = defaults.dropdown.keepOpen;\n\n  /**\n   * @name dynamicUpdate\n   */\n  @Input() public dynamicUpdate = defaults.dropdown.dynamicUpdate;\n\n  /**\n   * @name zIndex\n   */\n  @Input() public zIndex = defaults.dropdown.zIndex;\n\n  /**\n   * list of items that match the current value of the input (for autocomplete)\n   * @name items\n   */\n  public items: TagModel[] = [];\n\n  /**\n   * @name tagInput\n   */\n  public tagInput: TagInputComponent = this.injector.get(TagInputComponent);\n\n  /**\n   * @name _autocompleteItems\n   */\n  private _autocompleteItems: TagModel[] = [];\n\n  /**\n   * @name autocompleteItems\n   * @param items\n   */\n  public set autocompleteItems(items: TagModel[]) {\n    this._autocompleteItems = items;\n  }\n\n  /**\n   * @name autocompleteItems\n   * @desc array of items that will populate the autocomplete\n   */\n  @Input() public get autocompleteItems(): TagModel[] {\n    const items = this._autocompleteItems;\n\n    if (!items) {\n      return [];\n    }\n\n    return items.map((item: TagModel) => {\n      return typeof item === 'string'\n        ? {\n            [this.displayBy]: item,\n            [this.identifyBy]: item\n          }\n        : item;\n    });\n  }\n\n  constructor(private readonly injector: Injector) {}\n\n  /**\n   * @name ngAfterviewInit\n   */\n  ngAfterViewInit(): void {\n    this.onItemClicked().subscribe((item: Ng2MenuItem) => {\n      this.requestAdding(item);\n    });\n\n    // reset itemsMatching array when the dropdown is hidden\n    this.onHide().subscribe(this.resetItems);\n\n    const DEBOUNCE_TIME = 200;\n    const KEEP_OPEN = this.keepOpen;\n\n    this.tagInput.onTextChange\n      .asObservable()\n      .pipe(\n        debounceTime(DEBOUNCE_TIME),\n        filter((value: string) => {\n          if (KEEP_OPEN === false) {\n            return value.length > 0;\n          }\n\n          return true;\n        })\n      )\n      .subscribe(this.show);\n  }\n\n  /**\n   * @name updatePosition\n   */\n  public updatePosition(): void {\n    const position = this.tagInput.inputForm.getElementPosition();\n\n    this.dropdown.menu.updatePosition(position, this.dynamicUpdate);\n  }\n\n  /**\n   * @name isVisible\n   */\n  public get isVisible(): boolean {\n    return this.dropdown.menu.dropdownState.menuState.isVisible;\n  }\n\n  /**\n   * @name onHide\n   */\n  public onHide(): EventEmitter<Ng2Dropdown> {\n    return this.dropdown.onHide;\n  }\n\n  /**\n   * @name onItemClicked\n   */\n  public onItemClicked(): EventEmitter<string> {\n    return this.dropdown.onItemClicked;\n  }\n\n  /**\n   * @name selectedItem\n   */\n  public get selectedItem(): Ng2MenuItem {\n    return this.dropdown.menu.dropdownState.dropdownState.selectedItem;\n  }\n\n  /**\n   * @name state\n   */\n  public get state(): any {\n    return this.dropdown.menu.dropdownState;\n  }\n\n  /**\n   *\n   * @name show\n   */\n  public show = (): void => {\n    const maxItemsReached =\n      this.tagInput.items.length === this.tagInput.maxItems;\n    const value = this.getFormValue();\n    const hasMinimumText = value.trim().length >= this.minimumTextLength;\n    const position = this.calculatePosition();\n    const items = this.getMatchingItems(value);\n    const hasItems = items.length > 0;\n    const isHidden = this.isVisible === false;\n    const showDropdownIfEmpty = this.showDropdownIfEmpty && hasItems && !value;\n    const isDisabled = this.tagInput.disable;\n\n    const shouldShow =\n      isHidden && ((hasItems && hasMinimumText) || showDropdownIfEmpty);\n    const shouldHide = this.isVisible && !hasItems;\n\n    if (this.autocompleteObservable && hasMinimumText) {\n      return this.getItemsFromObservable(value);\n    }\n\n    if (\n      (!this.showDropdownIfEmpty && !value) ||\n      maxItemsReached ||\n      isDisabled\n    ) {\n      return this.dropdown.hide();\n    }\n\n    this.setItems(items);\n\n    if (shouldShow) {\n      this.dropdown.show(position);\n    } else if (shouldHide) {\n      this.hide();\n    }\n  };\n\n  /**\n   * @name hide\n   */\n  public hide(): void {\n    this.resetItems();\n    this.dropdown.hide();\n  }\n\n  /**\n   * @name scrollListener\n   */\n  @HostListener('window:scroll')\n  public scrollListener(): void {\n    if (!this.isVisible || !this.dynamicUpdate) {\n      return;\n    }\n\n    this.updatePosition();\n  }\n\n  /**\n   * @name onWindowBlur\n   */\n  @HostListener('window:blur')\n  public onWindowBlur(): void {\n    this.dropdown.hide();\n  }\n\n  /**\n   * @name getFormValue\n   */\n  private getFormValue(): string {\n    const formValue = this.tagInput.formValue;\n    return formValue ? formValue.toString().trim() : '';\n  }\n\n  /**\n   * @name calculatePosition\n   */\n  private calculatePosition(): ClientRect {\n    return this.tagInput.inputForm.getElementPosition();\n  }\n\n  /**\n   * @name requestAdding\n   * @param item {Ng2MenuItem}\n   */\n  private requestAdding = async (item: Ng2MenuItem) => {\n    const tag = this.createTagModel(item);\n    await this.tagInput.onAddingRequested(true, tag).catch(() => {});\n  };\n\n  /**\n   * @name createTagModel\n   * @param item\n   */\n  private createTagModel(item: Ng2MenuItem): TagModel {\n    const display =\n      typeof item.value === 'string' ? item.value : item.value[this.displayBy];\n    const value =\n      typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\n\n    return {\n      ...item.value,\n      [this.tagInput.displayBy]: display,\n      [this.tagInput.identifyBy]: value\n    };\n  }\n\n  /**\n   *\n   * @param value {string}\n   */\n  private getMatchingItems(value: string): TagModel[] {\n    if (!value && !this.showDropdownIfEmpty) {\n      return [];\n    }\n\n    const dupesAllowed = this.tagInput.allowDupes;\n\n    return this.autocompleteItems.filter((item: TagModel) => {\n      const hasValue = dupesAllowed\n        ? false\n        : this.tagInput.tags.some(tag => {\n            const identifyBy = this.tagInput.identifyBy;\n            const model =\n              typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\n\n            return model === item[this.identifyBy];\n          });\n\n      return this.matchingFn(value, item) && hasValue === false;\n    });\n  }\n\n  /**\n   * @name setItems\n   */\n  private setItems(items: TagModel[]): void {\n    this.items = items.slice(0, this.limitItemsTo || items.length);\n  }\n\n  /**\n   * @name resetItems\n   */\n  private resetItems = (): void => {\n    this.items = [];\n  };\n\n  /**\n   * @name populateItems\n   * @param data\n   */\n  private populateItems(data: any): TagInputDropdown {\n    this.autocompleteItems = data.map(item => {\n      return typeof item === 'string'\n        ? {\n            [this.displayBy]: item,\n            [this.identifyBy]: item\n          }\n        : item;\n    });\n\n    return this;\n  }\n\n  /**\n   * @name getItemsFromObservable\n   * @param text\n   */\n  private getItemsFromObservable = (text: string): void => {\n    this.setLoadingState(true);\n\n    const subscribeFn = (data: any[]) => {\n      // hide loading animation\n      this.setLoadingState(false)\n        // add items\n        .populateItems(data);\n\n      this.setItems(this.getMatchingItems(text));\n\n      if (this.items.length) {\n        this.dropdown.show(this.calculatePosition());\n      } else {\n        this.dropdown.hide();\n      }\n    };\n\n    this.autocompleteObservable(text)\n      .pipe(first())\n      .subscribe(subscribeFn, () => this.setLoadingState(false));\n  };\n\n  /**\n   * @name setLoadingState\n   * @param state\n   */\n  private setLoadingState(state: boolean): TagInputDropdown {\n    this.tagInput.isLoading = state;\n\n    return this;\n  }\n}\n","// angular\nimport {\n    Component,\n    forwardRef,\n    HostBinding,\n    Input,\n    Output,\n    EventEmitter,\n    Renderer2,\n    ViewChild,\n    ViewChildren,\n    ContentChildren,\n    ContentChild,\n    OnInit,\n    TemplateRef,\n    QueryList,\n    AfterViewInit\n} from '@angular/core';\n\nimport {\n    AsyncValidatorFn,\n    FormControl,\n    NG_VALUE_ACCESSOR,\n    ValidatorFn\n} from '@angular/forms';\n\n// rx\nimport { Observable } from 'rxjs';\nimport { debounceTime, filter, map, first } from 'rxjs/operators';\n\n// ng2-tag-input\nimport { TagInputAccessor, TagModel } from '../../core/accessor';\nimport { listen } from '../../core/helpers/listen';\nimport * as constants from '../../core/constants';\n\nimport { DragProvider, DraggedTag } from '../../core/providers/drag-provider';\n\nimport { TagInputForm } from '../tag-input-form/tag-input-form.component';\nimport { TagComponent } from '../tag/tag.component';\n\nimport { animations } from './animations';\nimport { defaults } from '../../defaults';\nimport { TagInputDropdown } from '../dropdown/tag-input-dropdown.component';\n\n// angular universal hacks\n/* tslint:disable-next-line */\nconst DragEvent = (window as any).DragEvent;\n\nconst CUSTOM_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\n@Component({\n    selector: 'tag-input',\n    providers: [CUSTOM_ACCESSOR],\n    styleUrls: ['./tag-input.style.scss'],\n    templateUrl: './tag-input.template.html',\n    animations\n})\nexport class TagInputComponent extends TagInputAccessor implements OnInit, AfterViewInit {\n    /**\n     * @name separatorKeys\n     * @desc keyboard keys with which a user can separate items\n     */\n    @Input() public separatorKeys: string[] = defaults.tagInput.separatorKeys;\n\n    /**\n     * @name separatorKeyCodes\n     * @desc keyboard key codes with which a user can separate items\n     */\n    @Input() public separatorKeyCodes: number[] = defaults.tagInput.separatorKeyCodes;\n\n    /**\n     * @name placeholder\n     * @desc the placeholder of the input text\n     */\n    @Input() public placeholder: string = defaults.tagInput.placeholder;\n\n    /**\n     * @name secondaryPlaceholder\n     * @desc placeholder to appear when the input is empty\n     */\n    @Input() public secondaryPlaceholder: string = defaults.tagInput.secondaryPlaceholder;\n\n    /**\n     * @name maxItems\n     * @desc maximum number of items that can be added\n     */\n    @Input() public maxItems: number = defaults.tagInput.maxItems;\n\n    /**\n     * @name validators\n     * @desc array of Validators that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public validators: ValidatorFn[] = defaults.tagInput.validators;\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public asyncValidators: AsyncValidatorFn[] = defaults.tagInput.asyncValidators;\n\n    /**\n    * - if set to true, it will only possible to add items from the autocomplete\n    * @name onlyFromAutocomplete\n    */\n    @Input() public onlyFromAutocomplete = defaults.tagInput.onlyFromAutocomplete;\n\n    /**\n     * @name errorMessages\n     */\n    @Input() public errorMessages: { [key: string]: string } = defaults.tagInput.errorMessages;\n\n    /**\n     * @name theme\n     */\n    @Input() public theme: string = defaults.tagInput.theme;\n\n    /**\n     * @name onTextChangeDebounce\n     */\n    @Input() public onTextChangeDebounce = defaults.tagInput.onTextChangeDebounce;\n\n    /**\n     * - custom id assigned to the input\n     * @name id\n     */\n    @Input() public inputId = defaults.tagInput.inputId;\n\n    /**\n     * - custom class assigned to the input\n     */\n    @Input() public inputClass: string = defaults.tagInput.inputClass;\n\n    /**\n     * - option to clear text input when the form is blurred\n     * @name clearOnBlur\n     */\n    @Input() public clearOnBlur: boolean = defaults.tagInput.clearOnBlur;\n\n    /**\n     * - hideForm\n     * @name clearOnBlur\n     */\n    @Input() public hideForm: boolean = defaults.tagInput.hideForm;\n\n    /**\n     * @name addOnBlur\n     */\n    @Input() public addOnBlur: boolean = defaults.tagInput.addOnBlur;\n\n    /**\n     * @name addOnPaste\n     */\n    @Input() public addOnPaste: boolean = defaults.tagInput.addOnPaste;\n\n    /**\n     * - pattern used with the native method split() to separate patterns in the string pasted\n     * @name pasteSplitPattern\n     */\n    @Input() public pasteSplitPattern = defaults.tagInput.pasteSplitPattern;\n\n    /**\n     * @name blinkIfDupe\n     */\n    @Input() public blinkIfDupe = defaults.tagInput.blinkIfDupe;\n\n    /**\n     * @name removable\n     */\n    @Input() public removable = defaults.tagInput.removable;\n\n    /**\n     * @name editable\n     */\n    @Input() public editable: boolean = defaults.tagInput.editable;\n\n    /**\n     * @name allowDupes\n     */\n    @Input() public allowDupes = defaults.tagInput.allowDupes;\n\n    /**\n     * @description if set to true, the newly added tags will be added as strings, and not objects\n     * @name modelAsStrings\n     */\n    @Input() public modelAsStrings = defaults.tagInput.modelAsStrings;\n\n    /**\n     * @name trimTags\n     */\n    @Input() public trimTags = defaults.tagInput.trimTags;\n\n    /**\n     * @name inputText\n     */\n    @Input() public get inputText(): string {\n        return this.inputTextValue;\n    }\n\n    /**\n     * @name ripple\n     */\n    @Input() public ripple: boolean = defaults.tagInput.ripple;\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    @Input() public tabindex: string = defaults.tagInput.tabIndex;\n\n    /**\n     * @name disable\n     */\n    @Input() public disable: boolean = defaults.tagInput.disable;\n\n    /**\n     * @name dragZone\n     */\n    @Input() public dragZone: string = defaults.tagInput.dragZone;\n\n    /**\n     * @name onRemoving\n     */\n    @Input() public onRemoving = defaults.tagInput.onRemoving;\n\n    /**\n     * @name onAdding\n     */\n    @Input() public onAdding = defaults.tagInput.onAdding;\n\n    /**\n     * @name animationDuration\n     */\n    @Input() public animationDuration = defaults.tagInput.animationDuration;\n\n    /**\n     * @name onAdd\n     * @desc event emitted when adding a new item\n     */\n    @Output() public onAdd = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     * @desc event emitted when removing an existing item\n     */\n    @Output() public onRemove = new EventEmitter<TagModel>();\n\n    /**\n     * @name onSelect\n     * @desc event emitted when selecting an item\n     */\n    @Output() public onSelect = new EventEmitter<TagModel>();\n\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is focused\n     */\n    @Output() public onFocus = new EventEmitter<string>();\n\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is blurred\n     */\n    @Output() public onBlur = new EventEmitter<string>();\n\n    /**\n     * @name onTextChange\n     * @desc event emitted when the input value changes\n     */\n    @Output() public onTextChange = new EventEmitter<TagModel>();\n\n    /**\n     * - output triggered when text is pasted in the form\n     * @name onPaste\n     */\n    @Output() public onPaste = new EventEmitter<string>();\n\n    /**\n     * - output triggered when tag entered is not valid\n     * @name onValidationError\n     */\n    @Output() public onValidationError = new EventEmitter<TagModel>();\n\n    /**\n     * - output triggered when tag is edited\n     * @name onTagEdited\n     */\n    @Output() public onTagEdited = new EventEmitter<TagModel>();\n\n    /**\n     * @name dropdown\n     */\n    // @ContentChild(forwardRef(() => TagInputDropdown), {static: true}) dropdown: TagInputDropdown;\n    @ContentChild(TagInputDropdown, { static: false }) public dropdown: TagInputDropdown;\n    /**\n     * @name template\n     * @desc reference to the template if provided by the user\n     */\n    @ContentChildren(TemplateRef, { descendants: false }) public templates: QueryList<TemplateRef<any>>;\n\n    /**\n     * @name inputForm\n     */\n    @ViewChild(TagInputForm, { static: false }) public inputForm: TagInputForm;\n\n    /**\n     * @name selectedTag\n     * @desc reference to the current selected tag\n     */\n    public selectedTag: TagModel | undefined;\n\n    /**\n     * @name isLoading\n     */\n    public isLoading = false;\n\n    /**\n     * @name inputText\n     * @param text\n     */\n    public set inputText(text: string) {\n        this.inputTextValue = text;\n        this.inputTextChange.emit(text);\n    }\n\n    /**\n     * @name tags\n     * @desc list of Element items\n     */\n    @ViewChildren(TagComponent) public tags: QueryList<TagComponent>;\n\n    /**\n     * @name listeners\n     * @desc array of events that get fired using @fireEvents\n     */\n    private listeners = {\n        [constants.KEYDOWN]: <{ (fun): any }[]>[],\n        [constants.KEYUP]: <{ (fun): any }[]>[]\n    };\n\n    /**\n     * @description emitter for the 2-way data binding inputText value\n     * @name inputTextChange\n     */\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    /**\n     * @description private variable to bind get/set\n     * @name inputTextValue\n     */\n    public inputTextValue = '';\n\n    /**\n     * @desc removes the tab index if it is set - it will be passed through to the input\n     * @name tabindexAttr\n     */\n    @HostBinding('attr.tabindex')\n    public get tabindexAttr(): string {\n        return this.tabindex !== '' ? '-1' : '';\n    }\n\n    /**\n     * @name animationMetadata\n     */\n    public animationMetadata: { value: string, params: object };\n\n    public errors: string[] = [];\n\n    public isProgressBarVisible$: Observable<boolean>;\n\n    constructor(private readonly renderer: Renderer2,\n        public readonly dragProvider: DragProvider) {\n        super();\n    }\n\n    /**\n     * @name ngAfterViewInit\n     */\n    public ngAfterViewInit(): void {\n        // set up listeners\n\n        this.setUpKeypressListeners();\n        this.setupSeparatorKeysListener();\n        this.setUpInputKeydownListeners();\n\n        if (this.onTextChange.observers.length) {\n            this.setUpTextChangeSubscriber();\n        }\n\n        // if clear on blur is set to true, subscribe to the event and clear the text's form\n        if (this.clearOnBlur || this.addOnBlur) {\n            this.setUpOnBlurSubscriber();\n        }\n\n        // if addOnPaste is set to true, register the handler and add items\n        if (this.addOnPaste) {\n            this.setUpOnPasteListener();\n        }\n\n        const statusChanges$ = this.inputForm.form.statusChanges;\n\n        statusChanges$.pipe(\n            filter((status: string) => status !== 'PENDING')\n        ).subscribe(() => {\n            this.errors = this.inputForm.getErrorMessages(this.errorMessages);\n        });\n\n        this.isProgressBarVisible$ = statusChanges$.pipe(\n            map((status: string) => {\n                return status === 'PENDING' || this.isLoading;\n            })\n        );\n\n        // if hideForm is set to true, remove the input\n        if (this.hideForm) {\n            this.inputForm.destroy();\n        }\n    }\n\n    /**\n     * @name ngOnInit\n     */\n    public ngOnInit(): void {\n        // if the number of items specified in the model is > of the value of maxItems\n        // degrade gracefully and let the max number of items to be the number of items in the model\n        // though, warn the user.\n        const hasReachedMaxItems = this.maxItems !== undefined &&\n            this.items &&\n            this.items.length > this.maxItems;\n\n        if (hasReachedMaxItems) {\n            this.maxItems = this.items.length;\n            console.warn(constants.MAX_ITEMS_WARNING);\n        }\n\n        // Setting editable to false to fix problem with tags in IE still being editable when\n        // onlyFromAutocomplete is true\n        this.editable = this.onlyFromAutocomplete ? false : this.editable;\n\n        this.setAnimationMetadata();\n    }\n\n    /**\n     * @name onRemoveRequested\n     * @param tag\n     * @param index\n     */\n    public onRemoveRequested(tag: TagModel, index: number): Promise<TagModel> {\n        return new Promise(resolve => {\n            const subscribeFn = (model: TagModel) => {\n                this.removeItem(model, index);\n                resolve(tag);\n            };\n\n            this.onRemoving ?\n                this.onRemoving(tag)\n                    .pipe(first())\n                    .subscribe(subscribeFn) : subscribeFn(tag);\n        });\n    }\n\n    /**\n     * @name onAddingRequested\n     * @param fromAutocomplete {boolean}\n     * @param tag {TagModel}\n     * @param index? {number}\n     * @param giveupFocus? {boolean}\n     */\n    public onAddingRequested(fromAutocomplete: boolean, tag: TagModel,\n        index?: number, giveupFocus?: boolean): Promise<TagModel> {\n        return new Promise((resolve, reject) => {\n            const subscribeFn = (model: TagModel) => {\n                return this\n                    .addItem(fromAutocomplete, model, index, giveupFocus)\n                    .then(resolve)\n                    .catch(reject);\n            };\n\n            return this.onAdding ?\n                this.onAdding(tag)\n                    .pipe(first())\n                    .subscribe(subscribeFn, reject) : subscribeFn(tag);\n        });\n    }\n\n    /**\n     * @name appendTag\n     * @param tag {TagModel}\n     */\n    public appendTag = (tag: TagModel, index = this.items.length): void => {\n        const items = this.items;\n        const model = this.modelAsStrings ? tag[this.identifyBy] : tag;\n\n        this.items = [\n            ...items.slice(0, index),\n            model,\n            ...items.slice(index, items.length)\n        ];\n    }\n\n    /**\n     * @name createTag\n     * @param model\n     */\n    public createTag = (model: TagModel): TagModel => {\n        const trim = (val: TagModel, key: string): TagModel => {\n            return typeof val === 'string' ? val.trim() : val[key];\n        };\n\n        return {\n            ...typeof model !== 'string' ? model : {},\n            [this.displayBy]: this.trimTags ? trim(model, this.displayBy) : model,\n            [this.identifyBy]: this.trimTags ? trim(model, this.identifyBy) : model\n        };\n    }\n\n    /**\n     * @name selectItem\n     * @desc selects item passed as parameter as the selected tag\n     * @param item\n     * @param emit\n     */\n    public selectItem(item: TagModel | undefined, emit = true): void {\n        const isReadonly = item && typeof item !== 'string' && item.readonly;\n\n        if (isReadonly || this.selectedTag === item) {\n            return;\n        }\n\n        this.selectedTag = item;\n\n        if (emit) {\n            this.onSelect.emit(item);\n        }\n    }\n\n    /**\n     * @name fireEvents\n     * @desc goes through the list of the events for a given eventName, and fires each of them\n     * @param eventName\n     * @param $event\n     */\n    public fireEvents(eventName: string, $event?): void {\n        this.listeners[eventName].forEach(listener => listener.call(this, $event));\n    }\n\n    /**\n     * @name handleKeydown\n     * @desc handles action when the user hits a keyboard key\n     * @param data\n     */\n    public handleKeydown(data: any): void {\n        const event = data.event;\n        const key = event.keyCode || event.which;\n        const shiftKey = event.shiftKey || false;\n\n        switch (constants.KEY_PRESS_ACTIONS[key]) {\n            case constants.ACTIONS_KEYS.DELETE:\n                if (this.selectedTag && this.removable) {\n                    const index = this.items.indexOf(this.selectedTag);\n                    this.onRemoveRequested(this.selectedTag, index);\n                }\n                break;\n\n            case constants.ACTIONS_KEYS.SWITCH_PREV:\n                this.moveToTag(data.model, constants.PREV);\n                break;\n\n            case constants.ACTIONS_KEYS.SWITCH_NEXT:\n                this.moveToTag(data.model, constants.NEXT);\n                break;\n\n            case constants.ACTIONS_KEYS.TAB:\n                if (shiftKey) {\n                    if (this.isFirstTag(data.model)) {\n                        return;\n                    }\n\n                    this.moveToTag(data.model, constants.PREV);\n                } else {\n                    if (this.isLastTag(data.model) && (this.disable || this.maxItemsReached)) {\n                        return;\n                    }\n\n                    this.moveToTag(data.model, constants.NEXT);\n                }\n                break;\n\n            default:\n                return;\n        }\n\n        // prevent default behaviour\n        event.preventDefault();\n    }\n\n    public async onFormSubmit() {\n        try {\n            await this.onAddingRequested(false, this.formValue);\n        } catch {\n            return;\n        }\n    }\n\n    /**\n     * @name setInputValue\n     * @param value\n     */\n    public setInputValue(value: string, emitEvent = true): void {\n        const control = this.getControl();\n\n        // update form value with the transformed item\n        control.setValue(value, { emitEvent });\n    }\n\n    /**\n     * @name getControl\n     */\n    private getControl(): FormControl {\n        return this.inputForm.value as FormControl;\n    }\n\n    /**\n     * @name focus\n     * @param applyFocus\n     * @param displayAutocomplete\n     */\n    public focus(applyFocus = false, displayAutocomplete = false): void {\n        if (this.dragProvider.getState('dragging')) {\n            return;\n        }\n\n        this.selectItem(undefined, false);\n\n        if (applyFocus) {\n            this.inputForm.focus();\n            this.onFocus.emit(this.formValue);\n        }\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.onTouched();\n\n        this.onBlur.emit(this.formValue);\n    }\n\n    /**\n     * @name hasErrors\n     */\n    public hasErrors(): boolean {\n        return !!this.inputForm && this.inputForm.hasErrors();\n    }\n\n    /**\n     * @name isInputFocused\n     */\n    public isInputFocused(): boolean {\n        return !!this.inputForm && this.inputForm.isInputFocused();\n    }\n\n    /**\n     * - this is the one way I found to tell if the template has been passed and it is not\n     * the template for the menu item\n     * @name hasCustomTemplate\n     */\n    public hasCustomTemplate(): boolean {\n        const template = this.templates ? this.templates.first : undefined;\n        const menuTemplate = this.dropdown && this.dropdown.templates ?\n            this.dropdown.templates.first : undefined;\n\n        return Boolean(template && template !== menuTemplate);\n    }\n\n    /**\n     * @name maxItemsReached\n     */\n    public get maxItemsReached(): boolean {\n        return this.maxItems !== undefined &&\n            this.items.length >= this.maxItems;\n    }\n\n    /**\n     * @name formValue\n     */\n    public get formValue(): string {\n        const form = this.inputForm.value;\n\n        return form ? form.value : '';\n    }\n\n    /**3\n     * @name onDragStarted\n     * @param event\n     * @param index\n     */\n    public onDragStarted(event: DragEvent, tag: TagModel, index: number): void {\n        event.stopPropagation();\n\n        const item = { zone: this.dragZone, tag, index } as DraggedTag;\n\n        this.dragProvider.setSender(this);\n        this.dragProvider.setDraggedItem(event, item);\n        this.dragProvider.setState({ dragging: true, index });\n    }\n\n    /**\n     * @name onDragOver\n     * @param event\n     */\n    public onDragOver(event: DragEvent, index?: number): void {\n        this.dragProvider.setState({ dropping: true });\n        this.dragProvider.setReceiver(this);\n\n        event.preventDefault();\n    }\n\n    /**\n     * @name onTagDropped\n     * @param event\n     * @param index\n     */\n    public onTagDropped(event: DragEvent, index?: number): void {\n        const item = this.dragProvider.getDraggedItem(event);\n\n        if (!item || item.zone !== this.dragZone) {\n            return;\n        }\n\n        this.dragProvider.onTagDropped(item.tag, item.index, index);\n\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    /**\n     * @name isDropping\n     */\n    public isDropping(): boolean {\n        const isReceiver = this.dragProvider.receiver === this;\n        const isDropping = this.dragProvider.getState('dropping');\n\n        return Boolean(isReceiver && isDropping);\n    }\n\n    /**\n     * @name onTagBlurred\n     * @param changedElement {TagModel}\n     * @param index {number}\n     */\n    public onTagBlurred(changedElement: TagModel, index: number): void {\n        this.items[index] = changedElement;\n        this.blur();\n    }\n\n    /**\n     * @name trackBy\n     * @param items\n     */\n    public trackBy(index: number, item: TagModel): string {\n        return item[this.identifyBy];\n    }\n\n    /**\n     * @name updateEditedTag\n     * @param tag\n     */\n    public updateEditedTag({ tag, index }: { tag: TagModel, index: number }): void {\n        this.onTagEdited.emit(tag);\n    }\n\n    /**\n     *\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    public isTagValid = (tag: TagModel, fromAutocomplete = false): boolean => {\n        const selectedItem = this.dropdown ? this.dropdown.selectedItem : undefined;\n        const value = this.getItemDisplay(tag).trim();\n\n        if (selectedItem && !fromAutocomplete || !value) {\n            return false;\n        }\n\n        const dupe = this.findDupe(tag, fromAutocomplete);\n\n        // if so, give a visual cue and return false\n        if (!this.allowDupes && dupe && this.blinkIfDupe) {\n            const model = this.tags.find(item => {\n                return this.getItemValue(item.model) === this.getItemValue(dupe);\n            });\n\n            if (model) {\n                model.blink();\n            }\n        }\n\n        const isFromAutocomplete = fromAutocomplete && this.onlyFromAutocomplete;\n\n        const assertions = [\n            // 1. there must be no dupe OR dupes are allowed\n            !dupe || this.allowDupes,\n\n            // 2. check max items has not been reached\n            !this.maxItemsReached,\n\n            // 3. check item comes from autocomplete or onlyFromAutocomplete is false\n            ((isFromAutocomplete) || !this.onlyFromAutocomplete)\n        ];\n\n        return assertions.filter(Boolean).length === assertions.length;\n    }\n\n    /**\n     * @name moveToTag\n     * @param item\n     * @param direction\n     */\n    private moveToTag(item: TagModel, direction: string): void {\n        const isLast = this.isLastTag(item);\n        const isFirst = this.isFirstTag(item);\n        const stopSwitch = (direction === constants.NEXT && isLast) ||\n            (direction === constants.PREV && isFirst);\n\n        if (stopSwitch) {\n            this.focus(true);\n            return;\n        }\n\n        const offset = direction === constants.NEXT ? 1 : -1;\n        const index = this.getTagIndex(item) + offset;\n        const tag = this.getTagAtIndex(index);\n\n        return tag.select.call(tag);\n    }\n\n    /**\n     * @name isFirstTag\n     * @param item {TagModel}\n     */\n    private isFirstTag(item: TagModel): boolean {\n        return this.tags.first.model === item;\n    }\n\n    /**\n     * @name isLastTag\n     * @param item {TagModel}\n     */\n    private isLastTag(item: TagModel): boolean {\n        return this.tags.last.model === item;\n    }\n\n    /**\n     * @name getTagIndex\n     * @param item\n     */\n    private getTagIndex(item: TagModel): number {\n        const tags = this.tags.toArray();\n\n        return tags.findIndex(tag => tag.model === item);\n    }\n\n    /**\n     * @name getTagAtIndex\n     * @param index\n     */\n    private getTagAtIndex(index: number) {\n        const tags = this.tags.toArray();\n\n        return tags[index];\n    }\n\n    /**\n     * @name removeItem\n     * @desc removes an item from the array of the model\n     * @param tag {TagModel}\n     * @param index {number}\n     */\n    public removeItem(tag: TagModel, index: number): void {\n        this.items = this.getItemsWithout(index);\n\n        // if the removed tag was selected, set it as undefined\n        if (this.selectedTag === tag) {\n            this.selectItem(undefined, false);\n        }\n\n        // focus input\n        this.focus(true, false);\n\n        // emit remove event\n        this.onRemove.emit(tag);\n    }\n\n    /**\n     * @name addItem\n     * @desc adds the current text model to the items array\n     * @param fromAutocomplete {boolean}\n     * @param item {TagModel}\n     * @param index? {number}\n     * @param giveupFocus? {boolean}\n     */\n    private addItem(fromAutocomplete = false, item: TagModel, index?: number, giveupFocus?: boolean):\n        Promise<TagModel> {\n        const display = this.getItemDisplay(item);\n        const tag = this.createTag(item);\n\n        if (fromAutocomplete) {\n            this.setInputValue(this.getItemValue(item, true));\n        }\n\n        return new Promise((resolve, reject) => {\n            /**\n             * @name reset\n             */\n            const reset = (): void => {\n                // reset control and focus input\n                this.setInputValue('');\n\n                if (giveupFocus) {\n                    this.focus(false, false);\n                } else {\n                    // focus input\n                    this.focus(true, false);\n                }\n\n                resolve(display);\n            };\n\n            const appendItem = (): void => {\n                this.appendTag(tag, index);\n\n                // emit event\n                this.onAdd.emit(tag);\n\n                if (!this.dropdown) {\n                    return;\n                }\n\n                this.dropdown.hide();\n\n                if (this.dropdown.showDropdownIfEmpty) {\n                    this.dropdown.show();\n                }\n            };\n\n            const status = this.inputForm.form.status;\n            const isTagValid = this.isTagValid(tag, fromAutocomplete);\n\n            const onValidationError = () => {\n                this.onValidationError.emit(tag);\n                return reject();\n            };\n\n            if (status === 'VALID' && isTagValid) {\n                appendItem();\n                return reset();\n            }\n\n            if (status === 'INVALID' || !isTagValid) {\n                reset();\n                return onValidationError();\n            }\n\n            if (status === 'PENDING') {\n                const statusUpdate$ = this.inputForm.form.statusChanges;\n\n                return statusUpdate$\n                    .pipe(\n                        filter(statusUpdate => statusUpdate !== 'PENDING'),\n                        first()\n                    )\n                    .subscribe((statusUpdate) => {\n                        if (statusUpdate === 'VALID' && isTagValid) {\n                            appendItem();\n                            return reset();\n                        } else {\n                            reset();\n                            return onValidationError();\n                        }\n                    });\n            }\n        });\n    }\n\n    /**\n     * @name setupSeparatorKeysListener\n     */\n    private setupSeparatorKeysListener(): void {\n        const useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;\n        const listener = ($event) => {\n            const hasKeyCode = this.separatorKeyCodes.indexOf($event.keyCode) >= 0;\n            const hasKey = this.separatorKeys.indexOf($event.key) >= 0;\n            // the keyCode of keydown event is 229 when IME is processing the key event.\n            const isIMEProcessing = $event.keyCode === 229;\n\n            if (hasKeyCode || (hasKey && !isIMEProcessing)) {\n                $event.preventDefault();\n                this.onAddingRequested(false, this.formValue)\n                    .catch(() => { });\n            }\n        };\n\n        listen.call(this, constants.KEYDOWN, listener, useSeparatorKeys);\n    }\n\n    /**\n     * @name setUpKeypressListeners\n     */\n    private setUpKeypressListeners(): void {\n        const listener = ($event) => {\n            const isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;\n\n            if (isCorrectKey &&\n                !this.formValue &&\n                this.items.length) {\n                this.tags.last.select.call(this.tags.last);\n            }\n        };\n\n        // setting up the keypress listeners\n        listen.call(this, constants.KEYDOWN, listener);\n    }\n\n    /**\n     * @name setUpKeydownListeners\n     */\n    private setUpInputKeydownListeners(): void {\n        this.inputForm.onKeydown.subscribe(event => {\n            if (event.key === 'Backspace' && this.formValue.trim() === '') {\n                event.preventDefault();\n            }\n        });\n    }\n\n    /**\n     * @name setUpOnPasteListener\n     */\n    private setUpOnPasteListener() {\n        const input = this.inputForm.input.nativeElement;\n\n        // attach listener to input\n        this.renderer.listen(input, 'paste', (event) => {\n            this.onPasteCallback(event);\n\n            event.preventDefault();\n            return true;\n        });\n    }\n\n    /**\n     * @name setUpTextChangeSubscriber\n     */\n    private setUpTextChangeSubscriber(): void {\n        this.inputForm.form\n            .valueChanges\n            .pipe(\n                debounceTime(this.onTextChangeDebounce)\n            )\n            .subscribe((value: { item: string }) => {\n                this.onTextChange.emit(value.item);\n            });\n    }\n\n    /**\n     * @name setUpOnBlurSubscriber\n     */\n    private setUpOnBlurSubscriber(): void {\n        const filterFn = (): boolean => {\n            const isVisible = this.dropdown && this.dropdown.isVisible;\n            return !isVisible && !!this.formValue;\n        };\n\n        this.inputForm\n            .onBlur\n            .pipe(\n                debounceTime(100),\n                filter(filterFn)\n            )\n            .subscribe(() => {\n                const reset = () => this.setInputValue('');\n\n                if (this.addOnBlur) {\n                    return this\n                        .onAddingRequested(false, this.formValue, undefined, true)\n                        .then(reset)\n                        .catch(reset);\n                }\n\n                reset();\n            });\n    }\n\n    /**\n     * @name findDupe\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    private findDupe(tag: TagModel, isFromAutocomplete: boolean): TagModel | undefined {\n        const identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;\n        const id = tag[identifyBy];\n\n        return this.items.find(item => this.getItemValue(item) === id);\n    }\n\n    /**\n     * @name onPasteCallback\n     * @param data\n     */\n    private onPasteCallback = async (data: ClipboardEvent) => {\n        interface IEWindow extends Window {\n            clipboardData: DataTransfer;\n        }\n\n        const getText = (): string => {\n            const isIE = Boolean((window as IEWindow).clipboardData);\n            const clipboardData = isIE ? (\n                (window as IEWindow).clipboardData\n            ) : data.clipboardData;\n            const type = isIE ? 'Text' : 'text/plain';\n            return clipboardData === null ? '' : clipboardData.getData(type) || '';\n        };\n\n        const text = getText();\n\n        const requests = text\n            .split(this.pasteSplitPattern)\n            .map(item => {\n                const tag = this.createTag(item);\n                this.setInputValue(tag[this.displayBy]);\n                return this.onAddingRequested(false, tag);\n            });\n\n        const resetInput = () => setTimeout(() => this.setInputValue(''), 50);\n\n        Promise.all(requests).then(() => {\n            this.onPaste.emit(text);\n            resetInput();\n        })\n            .catch(resetInput);\n    }\n\n    /**\n     * @name setAnimationMetadata\n     */\n    private setAnimationMetadata(): void {\n        this.animationMetadata = {\n            value: 'in',\n            params: { ...this.animationDuration }\n        };\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'delete-icon',\n    templateUrl: './icon.html',\n    styleUrls: ['./icon.scss']\n})\nexport class DeleteIconComponent {}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule, COMPOSITION_BUFFER_MODE } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Ng2DropdownModule } from 'ng2-material-dropdown';\nimport { HighlightPipe } from './core/pipes/highlight.pipe';\nimport { DragProvider } from './core/providers/drag-provider';\nimport { OptionsProvider, Options } from './core/providers/options-provider';\nimport { TagInputComponent } from './components/tag-input/tag-input';\nimport { DeleteIconComponent } from './components/icon/icon';\nimport { TagInputForm } from './components/tag-input-form/tag-input-form.component';\nimport { TagComponent } from './components/tag/tag.component';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagRipple } from './components/tag/tag-ripple.component';\n\nconst optionsProvider = new OptionsProvider();\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        Ng2DropdownModule\n    ],\n    declarations: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    exports: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    providers: [\n        DragProvider,\n        { provide: COMPOSITION_BUFFER_MODE, useValue: false },\n    ]\n})\nexport class TagInputModule {\n    /**\n     * @name withDefaults\n     * @param options {Options}\n     */\n    public static withDefaults(options: Options): void {\n        optionsProvider.setOptions(options);\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {animations as Éµb} from './components/tag-input/animations';\nexport {TagInputAccessor as Éµa} from './core/accessor';\nexport {HighlightPipe as Éµd} from './core/pipes/highlight.pipe';\nexport {DragProvider as Éµc} from './core/providers/drag-provider';"],"names":["tslib_1.__decorate","tslib_1.__extends","constants.KEYDOWN","constants.KEYUP","constants.MAX_ITEMS_WARNING","constants.KEY_PRESS_ACTIONS","constants.ACTIONS_KEYS","constants.PREV","constants.NEXT"],"mappings":"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"}